{new
   WeightInputPanel
   weight_input_panel
   (file
      "weight_input.milo")
   (focus right_hand.hnl)
   (back_token back)
   (tertiary_token weightinput_toggle)
   (weight 0)
   (units pounds)
   (enter DX_NO_MENU_MOTIONBLUR
      {hamprovider
         add_sink
         $this
         (on_ui_nav_player_change)
         0
         FALSE}
      {player_provider_1
         add_sink
         $this
         (padnum_updated)}
      {player_provider_2
         add_sink
         $this
         (padnum_updated)}
      {right_hand.hnl set_provider weight_input_provider}
      {set
         [units]
         {$this get_preferred_units}}
      {$this update_weight_value}
      {do
         ($selected
            {weight_input_provider
               get_index_for_weight
               [weight]})
         {right_hand.hnl scroll_to_index $selected $selected}}
      {$this update_display})
   (update_weight_value
      {set
         [weight]
         {$this get_weight}})
   (exit
      {hamprovider remove_sink $this on_ui_nav_player_change}
      {player_provider_1 remove_sink $this padnum_updated}
      {player_provider_2 remove_sink $this padnum_updated})
   (NAV_SELECT_MSG
      {switch
         $component
         (right_hand.hnl
            {$this select_weight $index}
            skip_select_anim)
         (left_hand.hnl
            {switch
               $name
               (weightinput_toggle
                  {switch
                     [units]
                     (pounds
                        {set
                           [units]
                           kilograms})
                     (kilograms
                        {set
                           [units]
                           pounds})}
                  {do
                     ($highlighted_weight
                        {weight_input_provider
                           get_weight
                           {right_hand.hnl get_selected}})
                     {$this
                        set_preferred_units
                        [units]}
                     {$this update_weight_value}
                     {switch
                        [units]
                        (pounds
                           {set
                              $highlighted_weight
                              {weight_input_provider get_pounds_for_kgs $highlighted_weight}})
                        (kilograms
                           {set
                              $highlighted_weight
                              {weight_input_provider get_kg_for_pounds $highlighted_weight}})}
                     {$this update_display}
                     {do
                        ($selected
                           {weight_input_provider get_index_for_weight $highlighted_weight})
                        {right_hand.hnl scroll_to_index $selected $selected}}})
               (back
                  {do
                     ($screen
                        {handle_ret
                           ($this back_button)})
                     {if
                        {!= $screen kDataUnhandled}
                        {ui go_back_screen $screen}}})})})
   (highlight_changed)
   (select_weight
      ($index)
      {set
         [weight]
         {weight_input_provider get_weight $index}}
      {$this
         set_weight
         [weight]}
      {$this update_display})
   (back_button fitness_screen)
   (update_display
      {if_else
         {profile_mgr has_active_profile}
         {do
            {switch
               [units]
               (pounds
                  {weight_display.lbl
                     set_int
                     {int
                        [weight]}})
               (kilograms
                  {weight_display.lbl
                     set_float
                     "%.1f"
                     [weight]})}
            {units.lbl
               set
               text_token
               [units]}
            {right_hand.hnl refresh}}
         {do
            {ui goto_screen fitness_screen}}})
   (padnum_updated
      {$this update_display})
   (on_ui_nav_player_change
      {$this update_display})}
{new
   HamScreen
   weight_input_screen
   (panels meta background_panel weight_input_panel)
   (focus weight_input_panel)
   (back
      {handle_ret
         (weight_input_panel back_button)})}