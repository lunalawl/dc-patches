#ifndef _SHIP
{func
   setup_game
   ($song $venue $player_list)
   {content_mgr refresh_synchronously}
   {do
      ($i 0)
      {gamemode set_mode perform}
      {foreach
         $player
         $player_list
         {gamedata
            setp
            $i
            difficulty
            {elem $player 0}}
         {gamedata
            setp
            $i
            autoplay
            {if_else
               {>
                  {size $player}
                  1}
               {elem $player 1}
               ''}}
         {'++' $i}}
      {if
         {!= $venue ''}
         {meta_performer set_venue_pref $venue}}
      {meta_performer set_song $song}}}
#endif
{func
   reset_game_snapshots
   {clear_game_snapshots}
   {init_game_snapshots}}
{func
   init_game_snapshots
   {do
      ($allocate_snapshots 0)
      {set
         $allocate_snapshots
         {cond
            ({'||'
                  {hamprovider get finale}
                  {&&
                     {exists gamemode}
                     {gamemode in_mode dance_battle}}}
               1)
            ({==
                  practice
                  {gamemode get gameplay_mode}}
               0)
            (TRUE
               {gesture_mgr get_max_snapshots})}}
      {gesture_mgr init_snapshots $allocate_snapshots}}}
{func
   clear_game_snapshots
   {if
      {&&
         {exists gesture_mgr}
         {exists gamemode}}
      {gesture_mgr clear_snapshots}}}
{func
   game_restart
   {if_else
      {&&
         {ui current_screen}
         {!=
            {ui current_screen}
            game_screen}}
      {ui goto_screen restart_screen}
      {ui push_screen restart_screen}}
   {initialize_gameplay_data}
   {game_screen reset_game_mode}
   {if
      {!
         {meta_performer has_playlist}}
      {reset_game_snapshots}}}
{func
   set_all_hud_showing
   ($show)}
{func
   reset_all_callbacks
   {func hopo_callback}
   {func swingAtHopo_callback}
   {func whammy_start_callback}
   {func whammy_end_callback}
   {func star_phrase_miss_callback}
   {func star_phrase_captured_callback}
   {func star_use_begin_callback}
   {func star_use_end_callback}
   {func hopo_hit}}
{reset_all_callbacks}
{func
   player_pan
   ($user)
   {if_else
      {game_panel multiplayer}
      {elem
         (-0.5 0.5 -0.5 0.5)
         {$user get_slot_num}}
      0}}
{func
   play_game_seq
   ($sfx)
   {synth play $sfx}}
{func
   play_game_seq_player
   ($sfx_single $sfx_multi $user)
   {do
      ($sfx
         {if_else
            {game_panel multiplayer}
            $sfx_multi
            $sfx_single})
      {synth
         play
         $sfx
         (pan
            {player_pan $user})}}}
{func
   play_sfx
   ($sfx)
   {synth play $sfx}}
{func
   run_flow
   ($flow)
   {synth run_flow $flow}}
{func
   update_meta_performer
   {ui
      foreach_current_screen
      $s
      {$s
         foreach_panel
         $p
         {if
            {$p is_up}
            {handle
               ($p update_meta_performer)}}}}}
{func
   update_song_name
   ($song_label)
   {if_else
      {meta_performer has_playlist}
      {do
         ($index
            {'+'
               {meta_performer get_playlist_index}
               1})
         ($num_songs
            {meta_performer get_num_songs_in_playlist})
         {$song_label
            set_playlist_song_name
            {gamedata get song}
            $index
            $num_songs}}
      {$song_label
         set_song_name
         {gamedata get song}}}}
{func
   frac
   ($x)
   {int
      {'*' $x 256}}}
{func
   defrac
   ($x)
   {/ $x 256.0}}
{func
   initialize_gameplay_data
   {if_else
      {&&
         {gamemode in_mode campaign}
         {meta_performer has_playlist}}
      {hamprovider set finale TRUE}
      {hamprovider set finale FALSE}}
   {hamprovider
      set
      golden_boomy
      {profile_mgr is_content_unlocked boomygold}}}
{func
   enter_gameplay
   {cond
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               perform
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialGeneral}}}
         {enter_tutorial tutorial_general_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               dance_battle
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialDanceBattle}}}
         {enter_tutorial tutorial_battle_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               practice
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialPractice}}}
         {enter_tutorial tutorial_practice_screen_0 FALSE})
      (TRUE
         {do
            {initialize_gameplay_data}
            {if
               {exists gesture_mgr}
               {gesture_mgr set_identification_enabled FALSE}}
            {if_else
               {==
                  {ui bottom_screen}
                  {ui current_screen}}
               {ui goto_screen loading_screen}
               {ui pop_screen loading_screen}}
            {meta music_stop}}
         0)}}
{func
   enter_tutorial
   ($tutorial_screen $from_options)
   {if_else
      $from_options
      {tutorial_next_panel set on_complete options}
      {tutorial_next_panel set on_complete start_game}}
   {ui goto_screen $tutorial_screen}}
{func
   beat_to_measure
   ($b)
   {'+'
      1
      {int
         {/ $b 4}}}}
{func
   measure_to_beat
   ($m)
   {'*'
      4
      {- $m 1}}}
{func
   get_backup_dancer_type
   {cond
      ({&&
            {exists gamemode}
            {gamemode in_mode dance_battle}}
         kBackupDancersDanceBattle)
      ({&&
            {exists hamprovider}
            {hamprovider get finale}}
         kBackupDancersFinale)
      (TRUE kBackupDancersRegular)}}