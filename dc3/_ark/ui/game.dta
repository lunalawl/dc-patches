#define LOSE_MUSIC_SLOW_SEC
(2)
{new GamePanel game_panel}
#include flashcard_dock/flashcard_dock.dta
#include rhythm_detector/rhythm_detector.dta
#include bustamove/bustamove.dta
{new
   UIPanel
   world_panel
   (file
      "../world/world.milo")
   #ifdef HX_XBOX
   #endif
   (unload_async TRUE)}
{new
   HamScreen
   restart_screen
   (enter DX_NO_MENU_MOTIONBLUR
      {if
         $hamdirector
         {$hamdirector reselect_world_postproc}}
      {if_else
         {==
            {gamemode get game_screen}
            {ui bottom_screen}}
         {do
            {{gamemode get game_screen}
               reenter_screen}
            {ui pop_screen}}
         {do
            {ui
               pop_screen
               {gamemode get game_screen}}}})}
{new
   HamPanel
   accept_pattern_panel
   COMMON_DIALOG_PANEL_HANDLERS
   (file
      "ingame_dialog.milo")
   (show_hand_help FALSE)
   (use_gamertag_bg TRUE)
   (selected -1)
   (NAV_SELECT_MSG
      {switch
         $name
         (yes
            {print
               "NAV_SELECT_MSG:YES\n"}
            {set
               [selected]
               1})
         (no
            {print
               "NAV_SELECT_MSG:NO\n"}
            {set
               [selected]
               0})}
      kDataUnhandled)
   (fade_out
      {fade_out.flow activate})}
{func
   get_fitness_profile
   ($player_index)
   {do
      ($pad
         {{gamedata player $player_index}
            get
            pad_num})
      ($profile
         {profile_mgr get_profile_from_pad $pad})
      {if_else
         {&&
            $profile
            {$profile in_fitness_mode}}
         $profile
         ''}}}
{new
   HamPanel
   fitness_hud_panel
   (file
      "hud/fitness_hud_panel.milo")
   (panel_dir '')
   (hud_names
      (fitness_hud_left fitness_hud_right))
   (huds
      ())
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         [panel_dir]
         {$this loaded_dir}}
      {hamprovider
         add_sink
         $this
         ((post_sides_switched on_side_moved))
         kSinkModeHandle
         FALSE}
      {$this reset})
   (exit
      {hamprovider remove_sink $this post_sides_switched})
   (on_side_moved
      {$this reset})
   (reset
      {resize
         [huds]
         {gamedata max_players}}
      {foreach_int
         $p
         0
         {gamedata max_players}
         {do
            ($hud_name
               {elem
                  [hud_names]
                  {{gamedata getp $p provider}
                     get
                     side}})
            ($hud
               {find_obj
                  [panel_dir]
                  $hud_name})
            {$hud update $p TRUE}
            {set_elem
               [huds]
               $p
               $hud}}})
   (poll
      {foreach_int
         $p
         0
         {gamedata max_players}
         {do
            ($hud
               {elem
                  [huds]
                  $p})
            {$hud update $p FALSE}}}
      {do
         ($driver_names
            (buffer_fadeout_p_left.anim buffer_fadeout_p_right.anim))
         {foreach_int
            $i
            0
            {size
               [hud_names]}
            {do
               ($fitness_hud
                  {find_obj
                     [panel_dir]
                     {elem
                        [hud_names]
                        $i}})
               ($driver
                  {find_obj
                     {cursor_panel loaded_dir}
                     {elem $driver_names $i}})
               ($driver_val
                  {!=
                     {$driver get frame}
                     0.0})
               {$fitness_hud set hidden $driver_val}}}})}
{new
   HamScreen
   game_screen
   (panels game_panel world_panel rhythm_detector_panel bustamove_visualizer_panel bustamove_panel flashcard_dock_panel fitness_hud_panel)
   (disable_screen_saver TRUE)
   (hide_letterbox TRUE)
   (enter DX_NO_MENU_MOTIONBLUR
      {$this set_showing TRUE}
      {rnd set_in_game TRUE}
      {platform_mgr
         add_sink
         $this
         (ui_changed)}
      {platform_mgr
         add_sink
         acc_mgr
         (signin_changed)}
      {$this reset_check_states}
      {$this reset_game_mode}
      {if
         {&&
            {exists gesture_mgr}
            {exists gamemode}}
         {init_game_snapshots}}
      {if
         {platform_mgr guide_showing}
         {game_panel pause_game}}
      {flashcard_dock_panel set_showing FALSE}
      {ui force_letterbox_off})
   (reset_game_mode
      {do
         ($old_mode
            {game_panel get_type})
         ($new_mode
            {gamemode get gameplay_mode})
         {if
            {!= $old_mode $new_mode}
            {game_panel set_type $new_mode}
            {handle
               (game_panel init)}}})
   (reset_check_states
      {meta_performer set_move_scored FALSE}
      {meta_performer set_check_move_scored TRUE}
      {do
         ($player1
            {gamedata player 0})
         ($player2
            {gamedata player 1})
         {$player1 clear_same_rating_count}
         {$player2 clear_same_rating_count}})
   (exit
      {platform_mgr remove_sink $this ui_changed}
      {$this set_showing FALSE}
      {rnd reset_postproc}
      {handle
         (game_panel deinit)}
      {game_panel set_type none}
      {clear_game_snapshots})
   (TRANSITION_COMPLETE_MSG
      {game_screen set_showing TRUE}
      {hamprovider set ui_nav_mode game}
      {if
         $game_unpause_on_enter
         {game_panel set_paused FALSE}
         {set $game_unpause_on_enter FALSE}}
      {if
         {&&
            {platform_mgr guide_showing}
            {!
               {game_panel is_paused}}}
         {game_panel pause_game}})
   (NAV_SELECT_DONE_MSG kDataUnhandled)
   #ifdef HX_XBOX
   (KINECT_GUIDE_GESTURE_MSG
      {skeleton_chooser
         switch_active_to_player_index_immediate
         {gesture_mgr get_player_index_by_tracking_id $engaged}}
      {game_panel pause_game})
   #endif}