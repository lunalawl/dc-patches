#include campaign_diffselect.dta
#include campaign_songselect.dta
#include campaign_choose_mode.dta
#include campaign_master_quest_crew_select.dta
#include campaign_master_quest_song_select.dta
#include campaign_vo.dta
{func
   pick_campaign_intro_shot_cat
   {do
      ($crew_nm
         {toupper
            {gamedata getp 0 crew}})
      ($crew
         {symbol $crew_nm})
      ($cur_era
         {meta_performer get_era})
      ($is_craze_song
         {meta_performer is_attempting_dance_craze_song})
      ($cur_song
         {gamedata get song})
      ($playlist_index
         {meta_performer get_playlist_index})
      ($song_index
         {meta_performer get_song_index $cur_song})
      ($is_era_intro_song
         {hamprovider get in_campaign_era_intro})
      ($choreographer
         {song_mgr dancer_for_song $cur_song})
      ($is_intro
         {==
            {gamemode get_mode}
            campaign_intro})
      ($is_tan_battle
         {==
            $cur_era
            {meta_performer tan_battle_era}})
      ($is_tan_battle_out
         {&&
            {==
               {campaign get_campaign_state}
               kCampaignStateTanBattleComplete}
            {==
               {gamedata get venue}
               dci}})
      ($is_glitterati
         {==
            {campaign get_campaign_state}
            kCampaignStatePostCreditsGlitterati})
      ($intro_cat INTRO_QUICK)
      {hamprovider set suppress_campaign_intro_audio FALSE}
      {hamprovider set suppress_campaign_crowd_audio FALSE}
      {if
         $is_intro
         {preload_world_movie bink_crew_decoy_test_complete.tmov TRUE}}
      {cond
         ({==
               {hamprovider get gameplay_mode}
               mind_control}
            {set $intro_cat I_MAED_UP_THIS_CATEGORY}
            {hamprovider set suppress_campaign_crowd_audio TRUE})
         ($is_intro
            {cond
               ({== $playlist_index 0}
                  {hamprovider set peak_behavior none}
                  {do
                     ($boomy
                        {find_obj
                           {$hamdirector get cur_world}
                           boombox.grp})
                     ($score
                        {find_obj
                           {$hamdirector get cur_world}
                           boombox_score.grp})
                     {if
                        $boomy
                        {$boomy set_showing TRUE}}
                     {if
                        $score
                        {$score set_showing TRUE}}
                     {hamprovider set suppress_campaign_intro_audio TRUE}}
                  {set $intro_cat CAMP_INTRO_SONG1_INTRO})
               ({== $playlist_index 1}
                  {hamprovider set peak_behavior perform}
                  {set $intro_cat INTRO_QUICK})})
         ($is_tan_battle_out
            {set $intro_cat CAMP_EPILOGUE})
         ($is_glitterati
            {set $intro_cat CAMP_STRINGER})
         ($is_tan_battle
            {hamprovider set is_in_campaign_mode TRUE}
            {print
               "IGC pick_campaign_intro_shot_cat is_tan_battle! $playlist_index = "
               $playlist_index
               "\n"}
            {if_else
               {== $playlist_index 0}
               {if
                  {!
                     {campaign get_outro_intro_seen}}
                  {set $intro_cat CAMP_SONG1_INTRO}
                  {campaign set_outro_intro_seen TRUE}}
               {set
                  $intro_cat
                  {cond
                     ({== $playlist_index 1}
                        CAMP_SONG1_OUTRO)
                     ({== $playlist_index 2}
                        CAMP_SONG2_OUTRO)
                     ({== $playlist_index 3}
                        CAMP_SONG3_OUTRO)
                     ({== $playlist_index 4}
                        CAMP_SONG4_OUTRO)
                     (TRUE I_MAED_UP_THIS_CATEGORY)}}})
         ({==
               {campaign get_campaign_state}
               kCampaignStateDciCutscene}
            {print
               "IGC    kCampaignStateDciCutscene\n"}
            {switch
               $cur_era
               (era02
                  {set $intro_cat CAMP_ERA1_OUTRO})
               (era03
                  {set $intro_cat CAMP_ERA2_OUTRO})
               (era04
                  {set $intro_cat CAMP_ERA3_OUTRO})})
         ({&&
               {==
                  {gamemode get_mode}
                  campaign_perform}
               $is_era_intro_song}
            {do
               {hamprovider set suppress_campaign_intro_audio TRUE}
               {switch
                  $cur_era
                  (era01
                     {set $intro_cat CAMP_SONG1_INTRO})
                  (era02
                     {set $intro_cat CAMP_SONG1_INTRO})
                  (era03
                     {set $intro_cat CAMP_SONG1_INTRO})
                  (era04
                     {set $intro_cat CAMP_SONG1_INTRO})
                  (era05
                     {do
                        {set $intro_cat CAMP_SONG1_INTRO}
                        {hamprovider set suppress_campaign_crowd_audio TRUE}})}})}
      {print
         "IGCIGCIGCIGCIGCIGCIGCIGCIGCIGCIGCIGC: pick_campaign_intro_shot_cat : '"
         $intro_cat
         "'\n"}
      $intro_cat}}
{func
   flip_players_for_campaign
   {hamprovider
      set
      flip_camshot_targets
      {&&
         {!=
            {meta_performer get_era}
            era_tan_battle}
         {!
            {game is_song_default_player_playing}}}}}
{func
   pick_campaign_outro_shot_cat
   {do
      ($crew_nm
         {toupper
            {gamedata getp 0 crew}})
      ($crew
         {symbol $crew_nm})
      ($num_stars
         {game_panel get num_stars})
      ($cur_era
         {meta_performer get_era})
      ($is_craze_song
         {meta_performer is_attempting_dance_craze_song})
      ($cur_song
         {gamedata get song})
      ($is_era_intro_song
         {hamprovider get in_campaign_era_intro})
      ($playlist_index
         {meta_performer get_playlist_index})
      ($song_index
         {meta_performer get_song_index $cur_song})
      ($choreographer
         {song_mgr dancer_for_song $cur_song})
      ($is_intro_mode
         {==
            {gamemode get_mode}
            campaign_intro})
      ($just_unlocked_craze
         {meta_performer just_unlocked_erasong})
      ($is_tan_battle
         {==
            $cur_era
            {meta_performer tan_battle_era}})
      ($outro_cat '')
      {cond
         ({==
               {hamprovider get gameplay_mode}
               mind_control}
            {$hamdirector
               force_shot
               ""}
            {set $outro_cat CAMP_GROOVE_OUTRO})
         ($is_intro_mode
            {cond
               ({== $playlist_index 0}
                  {set $outro_cat CAMP_INTRO_SONG1_OUTRO})
               ({>= $num_stars 3}
                  {set $outro_cat CAMP_INTRO_SONG2_OUTRO})
               (TRUE
                  {set $outro_cat WIN_SHOT_SPECIFY_ACTIVE_PLAYER_0})})
         ({meta_performer is_campaign_complete}
            {print
               "IGC    campaign complete!\n"}
            {set $outro_cat CAMP_EPILOGUE})
         ($is_tan_battle
            {do
               ($num_stars
                  {game_panel get num_stars})
               ($won
                  {meta_performer won_current_outro_song})
               {print
                  "IGC pick_campaign_outro_shot_cat: is_tan_battle! $playlist_index = "
                  $playlist_index}
               {set
                  $outro_cat
                  {cond
                     ({&&
                           $won
                           {== $playlist_index 5}}
                        CAMP_SONG5_OUTRO)
                     (TRUE I_MAED_UP_THIS_CATEGORY)}}
               {if
                  {== $outro_cat I_MAED_UP_THIS_CATEGORY}
                  {print
                     "enable_poll FALSE\n"}
                  {$hamdirector enable_poll FALSE}}})
         ({==
               {campaign get_campaign_state}
               kCampaignStateDciCutscene}
            {print
               "IGC    kCampaignStateDciCutscene\n"}
            {set $outro_cat ''})
         ({==
               {gamemode get_mode}
               campaign_perform}
            {do
               {switch
                  $cur_era
                  (era01
                     {cond
                        ($is_era_intro_song
                           {set $outro_cat CAMP_SONG1_OUTRO})
                        ($just_unlocked_craze
                           {set $outro_cat CAMP_SONG4_OUTRO})
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era02
                     {cond
                        ($is_era_intro_song
                           {set $outro_cat CAMP_SONG1_OUTRO})
                        ($just_unlocked_craze
                           {set $outro_cat CAMP_SONG4_OUTRO})
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era03
                     {cond
                        ($is_era_intro_song
                           {set $outro_cat CAMP_SONG1_OUTRO})
                        ($just_unlocked_craze
                           {set $outro_cat CAMP_SONG4_OUTRO})
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era04
                     {cond
                        ($is_era_intro_song
                           {set $outro_cat CAMP_SONG1_OUTRO})
                        ($just_unlocked_craze
                           {set $outro_cat CAMP_SONG4_OUTRO})
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era05
                     {cond
                        ($is_era_intro_song
                           {set $outro_cat CAMP_SONG1_OUTRO})
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  {set $outro_cat ''}}})
         ({==
               {gamemode get_mode}
               campaign_holla_back}
            {do
               {switch
                  $cur_era
                  (era01
                     {cond
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era02
                     {cond
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era03
                     {cond
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era04
                     {cond
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  (era05
                     {cond
                        ($is_craze_song
                           {set $outro_cat CAMP_SONG5_OUTRO})})
                  {set $outro_cat ''}}})}
      {print
         "IGCIGCIGCIGCIGCIGCIGCIGCIGCIGCIGCIGC: pick_campaign_outro_shot_cat : '"
         $outro_cat
         "'\n"}
      $outro_cat}}
{func
   maybe_hide_campaign_crowds
   {do
      ($wrld
         {$hamdirector get cur_world})
      {if
         {&&
            {gamemode in_mode campaign}
            {==
               {meta_performer get_era}
               era05}
            {hamprovider get in_campaign_era_intro}}
         {set
            $crowd
            {find_obj $wrld crowd.grp}}
         {if
            {&&
               $crowd
               {$crowd showing}}
            {print
               "maybe_hide_campaign_crowds: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> HIDING crowd.grp!\n"}
            {$crowd set_showing FALSE}}
         {set
            $crowd_floor
            {find_obj $wrld crowd_floor.grp}}
         {if
            {&&
               $crowd_floor
               {$crowd_floor showing}}
            {print
               "maybe_hide_campaign_crowds: >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> HIDING crowd_floor.grp!\n"}
            {$crowd_floor set_showing FALSE}}}}}
{func
   get_campaign_endgame_screen
   {cond
      ({'||'
            {&&
               {==
                  {meta_performer get_era}
                  era_tan_battle}
               {==
                  {hamprovider get gameplay_mode}
                  rhythm_battle}}
            {==
               {hamprovider get gameplay_mode}
               mind_control}}
         campaign_perform_endgame_standard_exit_screen)
      ({==
            {meta_performer get_era}
            era_tan_battle}
         {if_else
            {meta_performer won_current_outro_song}
            campaign_outro_endgame_screen
            campaign_outro_fail_screen})
      (TRUE campaign_perform_endgame_screen)}}
{func
   get_campaign_newsong_screen
   {print
      "** func get_campaign_newsong_screen **\n"}
   {set
      $cur_state
      {campaign get_campaign_state}}
   {cond
      ({== $cur_state kCampaignStateIntroRetry}
         campaign_intro_initiate_retry)
      ({== $cur_state kCampaignStateIntroAbort}
         campaign_intro_initiate_abort)
      ({'||'
            {==
               {ui current_screen}
               meta_loading_pause_new_song_screen}
            {== $cur_state kCampaignStateBidEndgame}}
         {do
            {print
               "NEW SONG handling\n"}
            {if_else
               {!
                  {meta_performer is_campaign_intro_complete}}
               {do
                  {print
                     "    campaign intro not yet complete\n"}
                  {campaign set_campaign_state kCampaignStateDiffSelect}
                  campaign_diffselect_screen}
               {do
                  ($era_song
                     {gamedata get song})
                  ($era_song_stars
                     {meta_performer
                        get_song_stars_earned
                        {meta_performer get_era}
                        $era_song})
                  ($enough_stars
                     {>= $era_song_stars 3.0})
                  {print
                     "    campaign intro already completed!\n"}
                  {do
                     {campaign set_campaign_state kCampaignStateSongSelect}
                     campaign_songselect_screen}}}})
      {do
         {set $prev_state $cur_state}
         {set
            $next_state
            {step_campaign_state_forward}}
         {cond
            ({== $next_state kCampaignStateEraIntroMovie}
               {if_else
                  {meta_performer get_era_intro_movie}
                  {set $next_screen campaign_era_intro_movie_screen}
                  {set $next_screen campaign_era_no_intro_movie_screen}})
            ({== $next_state kCampaignStateSongSelect}
               {set $next_screen campaign_songselect_screen})
            ({== $next_state kCampaignStateDciCutscene}
               {set $next_screen campaign_dci_transition_screen})
            ({== $next_state kCampaignStateTanBattle}
               {set $next_screen tan_battle_start_screen})
            ({== $next_state kCampaignStateTanBattleComplete}
               {set $next_screen campaign_tan_battle_complete_screen})
            ({== $next_state kCampaignStateMasterQuestCrewSelect}
               {set $next_screen campaign_master_quest_crew_select_screen})
            {campaign_flow_failure get_campaign_newsong_screen $prev_state $next_state}}
         $next_screen}}}
{func get_campaign_ready_screen campaign_choose_mode_screen}
{func
   get_campaign_seldiff_screen
   {set
      $cur_state
      {campaign get_campaign_state}}
   {print
      "campaign_flow: unexpected call to get_campaign_seldiff_screen! $cur_state = "
      $cur_state
      "\n"}
   campaign_multiuser_screen}
{func
   get_campaign_seldiff_back_screen
   {set
      $cur_state
      {campaign get_campaign_state}}
   {print
      "campaign_flow: unexpected call to get_campaign_seldiff_back_screen! $cur_state = "
      $cur_state
      "\n"}
   {set
      $back_screen
      {step_campaign_state_backward}}
   $back_screen}
{func
   campaign_commence_mindcontrol
   {print
      "<campaign_commence_mindcontrol>\n"}
   {gamemode set_mode campaign_perform}
   {meta_performer set_era era05}
   {{gamedata player 0}
      set_character
      rasa}
   {{gamedata player 1}
      set_character
      lima}
   {{gamedata player 0}
      set_character_outfit
      rasa06}
   {{gamedata player 1}
      set_character_outfit
      lima06}
   {do
      {songseq clear}
      {songseq add teachmehowtodougie teachmehowtodougie perform -1 -1 '' -1 -1 FALSE FALSE CAMP_SONG1_INTRO CAMP_SONG1_OUTRO}
      {songseq add dcimindcontrol dcimindcontrol mind_control -1 -1 '' -1 -1 FALSE FALSE INTRO_QUICK CAMP_SONG2_OUTRO}}
   {gamedata set song teachmehowtodougie}
   {enter_gameplay}}
{func
   is_finale
   {&&
      {exists hamprovider}
      {hamprovider get is_in_campaign_mode}
      {exists meta_performer}
      {==
         {meta_performer get_era}
         era_tan_battle}}}
{new
   HamScreen
   tan_battle_start_screen
   (panels meta_game)
   (enter DX_NO_MENU_MOTIONBLUR
      {print
         "tan_battle_start_screen : enter\n"}
      {campaign_commence_tan_battle})}
{func
   campaign_commence_tan_battle
   {gamemode set_mode campaign_outro}
   {hamprovider set song_shortening_enabled TRUE}
   {meta_performer setup_campaign_outro_playlist}
   {meta_performer start_playlist}
   {update_campaign_work_it_flag}
   {enter_gameplay}}
{new
   HamScreen
   campaign_tan_battle_complete_screen
   (panels meta_game)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta_performer set_campaign_complete}
      {shell_input exit_controller_mode}
      {gamedata set song thehustle}
      {gamedata set venue dci}
      {gamemode set_mode just_intro}
      {{gamedata player 0}
         set_character_outfit
         rasa05}
      {{gamedata player 1}
         set_character_outfit
         lima05}
      {enter_gameplay})}
{new
   HamScreen
   campaign_postcredits_glitterati_screen
   (panels meta_game)
   (enter DX_NO_MENU_MOTIONBLUR
      {shell_input exit_controller_mode}
      {gamedata set song thehustle}
      {gamedata set venue glitterati}
      {gamemode set_mode just_intro}
      {{gamedata player 0}
         set_character_outfit
         kerith04}
      {{gamedata player 1}
         set_character_outfit
         jaryn04}
      {enter_gameplay})}
{new
   HamScreen
   campaign_dci_transition_screen
   (panels meta_game)
   (enter DX_NO_MENU_MOTIONBLUR
      {shell_input exit_controller_mode}
      {gamedata set song thehustle}
      {gamedata set venue dci}
      {gamemode set_mode just_intro}
      {print
         "campaign_dci_transition_screen - current era = "
         {meta_performer get_era}
         "\n"}
      {set $p0 dare04}
      {set $p1 dare04}
      {set $b0 dare04}
      {set $b1 dare04}
      {switch
         {meta_performer get_era}
         (era02
            {set $p0 angel04}
            {set $p1 aubrey04}
            {set $b0 rasa05}
            {set $b1 lima05})
         (era03
            {set $p0 mo04}
            {set $p1 glitch04}
            {set $b0 rasa05}
            {set $b1 lima05})
         (era04
            {set $p0 taye04}
            {set $p1 lilt04}
            {set $b0 rasa05}
            {set $b1 lima05})
         (era05
            {set $p0 rasa06}
            {set $p1 lima06}
            {set $b0 rasa05}
            {set $b1 lima05})}
      {print
         "campaign_dci_transition_screen - era="
         {meta_performer get_era}
         ", p0="
         $p0
         ", p1="
         $p1
         ", b0="
         $b0
         ", b1="
         $b1
         "\n"}
      {{gamedata player 0}
         set_character_outfit
         $p0}
      {{gamedata player 1}
         set_character_outfit
         $p1}
      {if_else
         $hamwardrobe
         {$hamwardrobe set_backup_override_outfits $b0 $b1}
         {print
            "campaign_dci_transition_screen : NO HAMWARDROBE AVAILABLE!!!\n"}}
      {enter_gameplay})}
{func
   get_campaign_backup_dancer_type
   {cond
      ({==
            {campaign get_campaign_state}
            kCampaignStateDciCutscene}
         {print
            "[[[ get_campaign_backup_dancer_type ]]] kCampaignStateDciCutscene - ** kBackupDancersOverride **\n"}
         kBackupDancersOverride)
      ({&&
            {==
               {meta_performer get_era}
               era05}
            {hamprovider get in_campaign_era_intro}}
         {print
            "[[[ get_campaign_backup_dancer_type ]]] era05 - ** kBackupDancersOverride **\n"}
         {print
            "                                        song = "
            {gamedata get song}
            "\n"}
         {{gamedata player 0}
            set_character_outfit
            rasa06}
         {{gamedata player 1}
            set_character_outfit
            lima06}
         {if
            $hamwardrobe
            {$hamwardrobe set_backup_override_outfits bodie04 emilia04}}
         kBackupDancersOverride)
      (TRUE
         {print
            "[[[ get_campaign_backup_dancer_type ]]] kBackupDancersRegular\n"}
         kBackupDancersRegular)}}
{func
   preload_world_movie
   ($movie_name $do_preload)
   {print
      "preload_world_movie $movie_name = "
      $movie_name
      " $do_preload = "
      $do_preload
      "\n"}
   {{find_obj
         {$hamdirector get cur_world}
         $movie_name}
      set
      preload_movie
      $do_preload}}
{new
   HamScreen
   campaign_dci_cutscene_exit_screen
   (panels meta_game endgame_delay_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {shell_input exit_controller_mode}
      {print
         "campaign_dci_cutscene_exit_screen : enter\n"})
   (TRANSITION_COMPLETE_MSG
      {switch
         {campaign get_campaign_state}
         (kCampaignStateTanBattleComplete
            {hamprovider set is_in_campaign_mode FALSE}
            {hamprovider set is_in_campaign_stinger TRUE}
            {campaign set_campaign_state kCampaignStatePostCreditsGlitterati}
            {ui pop_screen movie_credits_screen})
         (kCampaignStatePostCreditsGlitterati
            {hamprovider set is_in_campaign_stinger FALSE}
            {enter_master_quest})
         {do
            {meta_performer
               set_era
               {meta_performer get_era}}
            {campaign set_campaign_state kCampaignStateEraIntroMovie}
            {ui pop_screen campaign_era_intro_movie_screen}}})}
{func
   enter_master_quest
   {print
      "== enter_master_quest\n"}
   {campaign set_campaign_state kCampaignStateMasterQuestCrewSelect}
   {hamprovider set is_in_campaign_mode FALSE}
   {hamprovider set is_in_campaign_stinger FALSE}
   {hamprovider set is_in_campaign_master_quest_mode TRUE}
   {gamemode set_mode perform}
   {{cursor_panel find buffer_angle.flow}
      request_stop}
   {{cursor_panel find buffer_angle.flow}
      activate}
   {if_else
      {!
         {profile_mgr has_seen_tutorial kTutorialMasterQuest}}
      {do
         {tutorial_next_panel set on_complete start_game}
         {ui pop_screen tutorial_master_quest_screen_0}}
      {ui pop_screen campaign_master_quest_crew_select_screen}}}
{func
   update_campaign_work_it_flag
   {set
      $cur_era
      {meta_performer get_era}}
   {if_else
      {&&
         {meta_performer is_era_new}
         {!=
            {hamprovider get gameplay_mode}
            practice}}
      {campaign
         set
         work_it_active
         {&&
            {hamprovider get in_campaign_era_intro}
            {'||'
               {== $cur_era era01}
               {== $cur_era era02}
               {== $cur_era era03}
               {== $cur_era era04}}}}
      {campaign set work_it_active FALSE}}
   {hamprovider
      set
      is_in_campaign_work_it
      {campaign get work_it_active}}
   {print
      "update_campaign_work_it_flag: new="
      {meta_performer is_era_new}
      "  era="
      $cur_era
      ", song="
      {meta_performer get_song}
      ", WORKIT="
      {campaign get work_it_active}
      "\n"}}
{func
   handle_campaign_era_transition
   {set
      $cur_state
      {campaign get_campaign_state}}
   {set $next_state $cur_state}
   {if_else
      {meta_performer is_campaign_new}
      {if_else
         {!
            {meta_performer is_campaign_intro_complete}}
         {do
            {print
               "    new campaign - campaign intro not yet complete\n"}
            {campaign set work_it_active FALSE}
            {meta_performer
               set_era
               {meta_performer first_era}}
            {set $next_state kCampaignStatePerformIt}}
         {do
            {print
               "    new campaign - intro just completed\n"}
            {campaign set work_it_active FALSE}
            {meta_performer
               set_era
               {meta_performer first_era}}
            {set $next_state kCampaignStateEraIntroMovie}}}
      {do
         {set
            $cur_era
            {meta_performer get_era}}
         {set
            $era_changed
            {meta_performer set_era_to_first_incomplete}}
         {set
            $new_era
            {meta_performer get_era}}
         {print
            "handle_campaign_era_transition: cur_era="
            $cur_era
            ", next="
            $new_era
            ", change="
            $era_changed
            "\n"}
         {cond
            ({&&
                  $era_changed
                  {==
                     $new_era
                     {meta_performer tan_battle_era}}}
               {print
                  "  * going to tan battle\n"}
               {set $next_state kCampaignStateTanBattle})
            ({== $cur_state kCampaignStateDiffSelect}
               {print
                  "  * re-entering campaign mode\n"}
               {meta_performer get_era_intro_song}
               {if_else
                  {&&
                     {== $new_era era05}
                     {meta_performer is_campaign_mind_control_complete}}
                  {set $next_state kCampaignStateSongSelect}
                  {set $next_state kCampaignStateEraIntroMovie}})
            ({&&
                  $era_changed
                  {!
                     {meta_performer get_era_intro_movie_played}}}
               {print
                  "  * transitioning to a new era\n"}
               {if_else
                  {'||'
                     {== $new_era era02}
                     {== $new_era era03}
                     {== $new_era era04}}
                  {set $next_state kCampaignStateDciCutscene}
                  {set $next_state kCampaignStateEraIntroMovie}})
            (TRUE
               {print
                  "  * select next song\n"}
               {set $next_state kCampaignStateSongSelect})}}}
   {print
      "handle_campaign_era_transition: -> "
      $next_state
      "\n"}
   $next_state}
{func
   step_campaign_state_forward
   {hamprovider set is_in_campaign_mode TRUE}
   {hamprovider set is_in_campaign_stinger FALSE}
   {set
      $cur_state
      {campaign get_campaign_state}}
   {cond
      ({== $cur_state kCampaignStateInactive}
         {set $next_state kCampaignStateInactive})
      ({== $cur_state kCampaignStateProfileSelect}
         {set $next_state kCampaignStateDiffSelect})
      ({== $cur_state kCampaignStateDiffSelect}
         {if_else
            {meta_performer is_campaign_complete}
            {set $next_state kCampaignStateMasterQuestCrewSelect}
            {set
               $next_state
               {handle_campaign_era_transition}}})
      ({== $cur_state kCampaignStateEraIntroMovie}
         {if_else
            {meta_performer is_era_new}
            {do
               {if_else
                  {!=
                     {meta_performer get_era}
                     {meta_performer tan_battle_era}}
                  {set $next_state kCampaignStatePerformIt}
                  {set $next_state kCampaignStateTanBattle}}}
            {set $next_state kCampaignStateSongSelect}})
      ({== $cur_state kCampaignStateSongSelect}
         {if_else
            {==
               {meta_performer get_dance_craze_song}
               {meta_performer get_song}}
            {set $next_state kCampaignStateHollaback}
            {set $next_state kCampaignStateModeSelect}})
      ({== $cur_state kCampaignStateModeSelect}
         {if_else
            {==
               {gamemode get_mode}
               campaign_perform}
            {set $next_state kCampaignStatePerformIt}
            {set $next_state kCampaignStatePracticeSetup}})
      ({== $cur_state kCampaignStatePracticeSetup}
         {set $next_state kCampaignStateBreakItDown})
      ({== $cur_state kCampaignStateHollaback}
         {set
            $next_state
            {handle_campaign_era_transition}})
      ({== $cur_state kCampaignStatePerformIt}
         {if_else
            {meta_performer is_campaign_complete}
            {set $next_state kCampaignStateMasterQuestCrewSelect}
            {set
               $next_state
               {handle_campaign_era_transition}}})
      ({== $cur_state kCampaignStateBreakItDown}
         {set $next_state kCampaignStateResults})
      ({== $cur_state kCampaignStateResults}
         {set $next_state kCampaignStatePostResults})
      ({== $cur_state kCampaignStatePostResults}
         {set $next_state kCampaignStateDiffSelect})
      ({== $cur_state kCampaignStateTanBattle}
         {set $next_state kCampaignStateTanBattleComplete})
      ({== $cur_state kCampaignStateMasterQuestCrewSelect}
         {set $next_state kCampaignStateMasterQuestSongSelect})
      ({== $cur_state kCampaignStateMasterQuestSongSelect}
         {set $next_state kCampaignStateModeSelect})
      ({== $cur_state kCampaignStateExit}
         {set $next_state kCampaignStateInactive})}
   {campaign set_campaign_state $next_state}
   $next_state}
{func
   step_campaign_state_backward
   {set
      $cur_state
      {campaign get_campaign_state}}
   {set $next_screen main_screen}
   {cond
      ({== $cur_state kCampaignStateProfileSelect}
         {set $next_state kCampaignStateInactive}
         {set $next_screen main_screen})
      ({== $cur_state kCampaignStateDiffSelect}
         {set $next_state kCampaignStateProfileSelect}
         {set $next_screen campaign_choose_profile_screen})
      ({== $cur_state kCampaignStateSongSelect}
         {set $next_state kCampaignStateDiffSelect}
         {set $next_screen campaign_diffselect_screen})
      ({== $cur_state kCampaignStateModeSelect}
         {set $next_state kCampaignStateSongSelect}
         {set $next_screen campaign_songselect_screen})
      ({== $cur_state kCampaignStatePracticeSetup}
         {set $next_state kCampaignStateModeSelect}
         {set $next_screen campaign_choose_mode_screen})
      ({== $cur_state kCampaignStateResults}
         {set $next_state kCampaignStatePostResults}
         {set $next_screen main_screen})
      ({== $cur_state kCampaignStatePostResults}
         {set $next_state kCampaignStateDiffSelect}
         {set $next_screen main_screen})
      ({== $cur_state kCampaignStateMasterQuestCrewSelect}
         {set $next_state kCampaignStateDiffSelect}
         {set $next_screen campaign_diffselect_screen})
      ({== $cur_state kCampaignStateMasterQuestSongSelect}
         {set $next_state kCampaignStateMasterQuestCrewSelect}
         {set $next_screen campaign_master_quest_crew_select_screen})
      {do
         {set $next_state kCampaignStateInactive}
         {set $next_screen main_screen}}}
   {campaign set_campaign_state $next_state}
   $next_screen}
{func
   campaign_flow_failure
   ($where $prev_state $next_state)
   {fail
      "**** CAMPAIGN FLOW ERROR at '"
      $where
      "' : "
      {campaign get_campaign_state_desc $prev_state}
      " ==> "
      {campaign get_campaign_state_desc $next_state}
      "\n"}}
{new
   MoviePanel
   campaign_era_intro_movie_panel
   (helpbar_allow_controller FALSE)
   (hide_helpbar TRUE)
   (hide_letterbox TRUE)
   (allow_load FALSE)
   (preload FALSE)
   (loop FALSE)
   (audio TRUE)
   (videos
      {meta_performer get_era_intro_movie})
   MOVIE_PANEL_STUFF
   (proceed_after_movie
      {meta_performer set_era_intro_movie_played}
      {gamemode set_mode campaign_perform}
      {set
         $prev_state
         {campaign get_campaign_state}}
      {set
         $next_state
         {step_campaign_state_forward}}
      {print
         "campaign_era_intro_movie_panel: movie_done - prev="
         $prev_state
         ", next="
         $next_state
         "\n"}
      {cond
         ({== $next_state kCampaignStatePerformIt}
            {set
               $selsong
               {meta_performer get_era_intro_song}}
            {meta_performer set_song $selsong}
            {hamprovider set in_campaign_era_intro TRUE}
            {update_campaign_work_it_flag}
            {if_else
               {==
                  {meta_performer get_era}
                  era05}
               {do
                  {campaign_commence_mindcontrol}}
               {do
                  {hamprovider
                     set
                     crew_character
                     {meta_performer get_challenge_character}}
                  {enter_gameplay}}})
         ({== $next_state kCampaignStateSongSelect}
            {ui goto_screen campaign_songselect_screen})
         {campaign_flow_failure campaign_era_intro_movie_panel $prev_state $next_state}})
   (movie_done
      {$this proceed_after_movie})}
{new
   HamScreen
   campaign_era_intro_movie_screen
   (panels meta campaign_era_intro_movie_panel movie_overlay_panel)
   (focus movie_overlay_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {hamprovider set ui_nav_mode movie}
      {if
         meta
         {meta music_stop}})
   (exit
      {hamprovider set ui_nav_mode shell})
   (skip_selected
      {campaign_era_intro_movie_panel proceed_after_movie})}
{new
   HamScreen
   campaign_era_no_intro_movie_screen
   (panels meta)
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         $selsong
         {meta_performer get_era_intro_song}}
      {meta_performer set_song $selsong}
      {hamprovider set in_campaign_era_intro TRUE}
      {update_campaign_work_it_flag}
      {if_else
         {==
            {meta_performer get_era}
            era05}
         {do
            {campaign_commence_mindcontrol}}
         {do
            {hamprovider
               set
               crew_character
               {meta_performer get_challenge_character}}
            {enter_gameplay}}})}
{new
   ChooseProfilePanel
   campaign_choose_profile_panel
   (file
      "../title/choose_profile.milo")
   (focus right_hand.hnl)
   (back_token screen_name_main)
   (enter DX_NO_MENU_MOTIONBLUR
      {right_hand.hnl set_provider $this}
      {voice_input_panel activate_voice_context select_profile_screen}
      {gamemode set_mode campaign}
      {campaign set_campaign_state kCampaignStateProfileSelect})
   (refresh_ui
      {right_hand.hnl refresh})
   SELECT_LIST_ITEM
   (poll SLIDE_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $component
         (right_hand.hnl
            {$this handle_select_profile})
         (left_hand.hnl
            {switch
               $name
               (screen_name_main
                  {$this handle_cancel_profile_select})
               (back
                  {$this handle_cancel_profile_select})})})
   (BUTTON_DOWN_MSG
      {switch
         $action
         ((kAction_Cancel)
            {$this handle_cancel_profile_select})
         kDataUnhandled})
   (handle_select_profile
      {set
         $index
         {right_hand.hnl get_selected}}
      {if_else
         {$this profile_selected $index}
         {do
            ($profile
               {$this get_profile $index})
            {profile_mgr set_critical_profile $profile}
            {meta_performer
               set_era
               {meta_performer first_era}}
            {set
               $prev_state
               {campaign get_campaign_state}}
            {set
               $next_state
               {step_campaign_state_forward}}
            {cond
               ({== $next_state kCampaignStateDiffSelect}
                  {ui goto_screen campaign_diffselect_screen})
               {campaign_flow_failure campaign_choose_profile_panel $prev_state $next_state}}}
         {do
            {print
               "{$this show_signin} \n"}
            {$this show_signin}
            skip_select_anim}})
   (handle_cancel_profile_select
      {set
         $back_screen
         {step_campaign_state_backward}}
      {ui go_back_screen $back_screen})}
{new
   HamScreen
   campaign_choose_profile_screen
   (panels meta background_panel campaign_choose_profile_panel)
   (focus campaign_choose_profile_panel)
   (back main_screen)
   (handle_global_commands TRUE)
   (on_voice_command
      ($command)
      {switch
         $command
         (sign_in
            {campaign_choose_profile_panel
               select_list_item
               {- 1}
               1
               {$this num_profiles}})
         (profile_one
            {if
               {>=
                  {$this num_profiles}
                  1}
               {campaign_choose_profile_panel
                  select_list_item
                  {- 1}
                  1
                  0}})
         (profile_two
            {if
               {>=
                  {$this num_profiles}
                  2}
               {campaign_choose_profile_panel
                  select_list_item
                  {- 1}
                  1
                  1}})
         (profile_three
            {if
               {>=
                  {$this num_profiles}
                  3}
               {campaign_choose_profile_panel
                  select_list_item
                  {- 1}
                  1
                  2}})
         (profile_four
            {if
               {>=
                  {$this num_profiles}
                  4}
               {campaign_choose_profile_panel
                  select_list_item
                  {- 1}
                  1
                  3}})
         (screen_name_main
            {helpbar select_left_list_item 1})
         BACRO})
   (on_global_voice_command
      ($command)
      {switch
         $command
         (hidden_global_sign_in
            {$this on_voice_command sign_in})
         (hidden_global_main
            {helpbar select_left_list_item 1})
         {on_global_voice_command $command}})}