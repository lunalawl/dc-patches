#define WRANGLER_HAND_UP_TIME
(1.0)
#define IDLE_VO_TIME
(12.0)
#define CYCLE_CREW_PORTRAIT_TIME
(1.0)
{func
   enter_party_mode
   {print
      "----- enter_party_mode\n"}
   {ui init_texture_store 2}
   {hamprovider set is_in_party_mode TRUE}
   {partymode_mgr reset_party}
   {partymode_mgr toggle_included_mode_on perform TRUE}
   {partymode_mgr toggle_included_mode_on bustamove TRUE}
   {partymode_mgr toggle_included_mode_on strike_a_pose TRUE}
   {partymode_mgr toggle_included_mode_on rhythm_battle TRUE}
   {partymode_mgr toggle_included_mode_on dance_battle TRUE}
   {partymode_mgr set is_using_per_song_options FALSE}
   {partymode_mgr set_difficulty kDifficultyEasy}
   {partymode_mgr use_selected_playlist FALSE}
   {partymode_mgr use_full_length_songs FALSE}
   {gesture_mgr set_identification_enabled FALSE}
   {if
      {==
         {player_provider_1 get side}
         kSkeletonLeft}
      {skeleton_chooser force_swap_player_sides}}}
{func
   exit_party_mode
   {print
      "----- exit_party_mode\n"}
   {partymode_mgr set_right_team_crew ''}
   {hamprovider set right_team_crew ''}
   {partymode_mgr set_left_team_crew ''}
   {hamprovider set left_team_crew ''}
   {partymode_mgr reset_party}
   {partymode_mgr set_custom_party 0}
   {hamprovider set is_in_pre_party_mode FALSE}
   {hamprovider set is_in_party_mode FALSE}
   {hamprovider set sided_colors_locked FALSE}
   {{cursor_panel find depth_buffer_left.grp}
      set_showing
      TRUE}
   {{cursor_panel find depth_buffer_right.grp}
      set_showing
      TRUE}
   {cursor_panel change_depth_colors_to_normal}
   {cursor_panel reset_normal_colors}
   {cursor_panel reset_silhouettes}
   {gesture_mgr set_identification_enabled TRUE}}
{func
   start_party_mode_event
   {gamedata
      set
      song
      {partymode_mgr get_curr_event_song_shortname}}
   {set
      $partymode_diff
      {partymode_mgr get_difficulty}}
   {gamedata setp 0 difficulty $partymode_diff}
   {gamedata setp 1 difficulty $partymode_diff}
   {partymode_mgr setup_character_data}
   {cond
      ({&&
            {partymode_mgr get is_using_per_song_options}
            {!=
               {partymode_mgr get_curr_event_name}
               bustamove}
            {!=
               {partymode_mgr get_curr_event_name}
               rhythm_battle}
            {!=
               {partymode_mgr get_curr_event_name}
               strike_a_pose}}
         {ui goto_screen multiuser_screen})
      {do
         {enter_gameplay}}}}
{new
   HamScreen
   party_mode_confirm_quit_to_main_menu_screen
   (panels dialog_panel)
   (back_screen '')
   (enter DX_NO_MENU_MOTIONBLUR
      {dialog_panel set_ok_no confirm_quit_mainmenu_short TRUE})
   (NAV_SELECT_MSG
      {switch
         $name
         (ok
            {exit_party_mode}
            {if_else
               {==
                  {ui bottom_screen}
                  {ui current_screen}}
               {do
                  {ui goto_screen main_screen}}
               {do
                  {game_panel end_game kQuit}
                  {ui pop_screen meta_loading_main_screen}}})
         (no
            {ui
               goto_screen
               [back_screen]})})}
{func
   quit_party_mode_to_main_menu
   ($back_screen)
   {party_mode_confirm_quit_to_main_menu_screen set back_screen $back_screen}
   {ui goto_screen party_mode_confirm_quit_to_main_menu_screen}}
#define PARTYMODE_CONTINUE_PANELS_COMMON
((file
      "../low_button.milo")
   (focus right_hand.hnl)
   (hide_helpbar
      {!
         {shell_input in_controller_mode}})
   (helpbar_confirm_label continue)
   (show_hand_help FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {right_hand.hnl
         set
         showing
         {!
            {shell_input in_controller_mode}}}
      {voice_input_panel activate_voice_context continue_cancel_screen})
   (controller_mode_entered
      {right_hand.hnl set showing FALSE})
   (controller_mode_exited
      {right_hand.hnl set showing TRUE}))
{new
   HamPanel
   party_mode_confirmation_panel
   (file
      "party_mode_confirmation.milo")}
{new
   HamPanel
   party_mode_confirmation_swipe_panel
   (file
      "../low_button.milo")
   (focus right_hand.hnl)
   (hide_helpbar FALSE)
   (helpbar_confirm_label ok)
   (back_token back)
   (show_hand_help TRUE)
   (hide_letterbox FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {right_hand.hnl
         set
         showing
         {!
            {shell_input in_controller_mode}}}
      {right_hand.hnl set_provider provider_ok.hnp}
      {voice_input_panel activate_voice_context crew_showdown_confirmation_screen})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $name
         (ok
            {ui goto_screen party_mode_branch_screen})
         (back
            {exit_party_mode}
            {ui goto_screen choose_mode_screen})})
   (controller_mode_entered
      {right_hand.hnl set showing FALSE})
   (controller_mode_exited
      {right_hand.hnl set showing TRUE})}
{new
   HamScreen
   party_mode_confirmation_screen
   (panels background_panel party_mode_confirmation_panel party_mode_confirmation_swipe_panel meta)
   (focus party_mode_confirmation_swipe_panel)
   (back choose_mode_screen)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start})
   (on_voice_command
      ($command)
      {party_mode_confirmation_swipe_panel select_right_list_token $command})}
{new
   HamPanel
   party_mode_welcome_panel
   (file
      "party_mode_welcome.milo")
   (focus right_hand.hnl)
   (hide_letterbox FALSE)
   (hide_helpbar TRUE)
   (allow_doubleuser_swipe TRUE)
   (enter DX_NO_MENU_MOTIONBLUR
      {right_hand.hnl set showing TRUE}
      {right_hand.hnl enable_selection}
      {if_else
         {!
            {partymode_mgr is_team_signed_in 1}}
         {if_else
            {'||'
               {!
                  {partymode_mgr get_left_team_crew}}
               {!
                  {partymode_mgr get_right_team_crew}}}
            {do
               {enter.flow activate}}
            {left_crew.flow activate}}
         {do
            {right_crew.flow activate}}})
   SELECT_RIGHT_LIST_ITEM
   (poll
      SLIDE_RIGHT_LIST_ITEM
      {if
         {!
            {'||'
               {enter.flow is_running}
               {left_crew.flow is_running}
               {right_crew.flow is_running}}}
         {if_else
            {!
               {partymode_mgr is_team_signed_in 1}}
            {if_else
               {'||'
                  {!
                     {partymode_mgr get_left_team_crew}}
                  {!
                     {partymode_mgr get_right_team_crew}}}
               {ui goto_screen crew_throwdown_multiuser_screen}
               {ui goto_screen party_mode_signin_screen}}
            {ui goto_screen party_mode_signin_screen}}})
   (NAV_SELECT_MSG
      {print
         "----- NAV_SELECT_MSG: "
         $name
         "\n"}
      {switch
         $name
         (crew_throwdown_welcome_skip
            {if_else
               {!
                  {partymode_mgr is_team_signed_in 1}}
               {if_else
                  {'||'
                     {!
                        {partymode_mgr get_left_team_crew}}
                     {!
                        {partymode_mgr get_right_team_crew}}}
                  {ui goto_screen crew_throwdown_multiuser_screen}
                  {ui goto_screen party_mode_signin_screen}}
               {ui goto_screen party_mode_signin_screen}})})}
{new
   HamScreen
   party_mode_welcome_screen
   (panels background_panel party_mode_welcome_panel meta)
   (focus party_mode_welcome_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {cursor_panel change_depth_colors_to_wrangler}
      {cursor_panel reset_sided_colors}
      {hamprovider set sided_colors_locked TRUE}
      {voice_input_panel activate_voice_context crew_showdown_welcome_screen})}
{new
   HamPanel
   party_mode_hub_panel
   (file
      "party_mode_hub.milo")
   (hide_helpbar FALSE)
   (helpbar_confirm_label none)
   (back_token '')
   (hide_letterbox FALSE)
   (timer -1.0)
   (event_started FALSE)
   (event_really_started FALSE)
   (idle_vo_timer IDLE_VO_TIME)
   (first_time_enter TRUE)
   (cycle_crew_portraits FALSE)
   (player_left_crew_portrait_index 0)
   (player_right_crew_portrait_index 0)
   (cycle_crew_portrait_timer CYCLE_CREW_PORTRAIT_TIME)
   (wrangle_players_first_time TRUE)
   (trigger_wrangle_players_timer_on TRUE)
   (trigger_wrangle_players_timer 1.0)
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         [wrangle_players_first_time]
         TRUE}
      {set
         [trigger_wrangle_players_timer_on]
         TRUE}
      {set
         [trigger_wrangle_players_timer]
         1.0}
      {hamprovider
         add_sink
         $this
         ((high_five on_high_five))
         0
         FALSE}
      {hamprovider
         add_sink
         $this
         ((party_pause on_party_pause))
         0
         FALSE}
      {upnext_mode.lbl
         set
         text_token
         {sprint
            {partymode_mgr get_curr_event_display_name}
            "_title"}}
      {upnext_song.lbl
         set
         text_token
         {partymode_mgr get_curr_event_song_name}}
      {artist.lbl
         set
         text_token
         {partymode_mgr get_curr_event_artist_name}}
      {$this set_participant_photos}
      {meter_left
         set_crew
         {partymode_mgr get_left_team_crew}}
      {meter_left
         set_meter_frame
         {partymode_mgr get_left_team_prev_pct_of_max_points}}
      {meter_left
         set_fill_amt
         {partymode_mgr get_left_team_prev_pct_of_max_points}}
      {meter_left
         set_colors
         {partymode_mgr get_crew_color 1 1}
         {partymode_mgr get_crew_color 1 2}}
      {meter_right
         set_crew
         {partymode_mgr get_right_team_crew}}
      {meter_right
         set_meter_frame
         {partymode_mgr get_right_team_prev_pct_of_max_points}}
      {meter_right
         set_fill_amt
         {partymode_mgr get_right_team_prev_pct_of_max_points}}
      {meter_right
         set_colors
         {partymode_mgr get_crew_color 0 1}
         {partymode_mgr get_crew_color 0 2}}
      {team_photo1.mat
         set
         diffuse_tex
         {ui get_stored_texture 0}}
      {team_photo2.mat
         set
         diffuse_tex
         {ui get_stored_texture 1}}
      {p_left_now_color.mat
         set
         diffuse_tex
         {sprint
            "logoPanel_"
            {partymode_mgr get_left_team_crew}
            ".tex"}}
      {p_right_now_color.mat
         set
         diffuse_tex
         {sprint
            "logoPanel_"
            {partymode_mgr get_right_team_crew}
            ".tex"}}
      {$this refresh_album_art}
      {set
         [timer]
         -1.0}
      {set
         [event_started]
         FALSE}
      {set
         [event_really_started]
         FALSE}
      {set
         [idle_vo_timer]
         IDLE_VO_TIME}
      {gamemode
         set_mode
         {partymode_mgr get_curr_event_name}
         {partymode_mgr get_curr_event_microgame_name}}
      {if_else
         [first_time_enter]
         {do
            {enter_hub_first_time.flow activate}
            {set
               [first_time_enter]
               FALSE}}
         {if_else
            {partymode_mgr is_showdown}
            {enter_hub_showdown.flow activate}
            {enter_hub.flow activate}}}
      {{cursor_panel find depth_buffer_left.grp}
         set_showing
         TRUE}
      {{cursor_panel find depth_buffer_right.grp}
         set_showing
         TRUE}
      {cursor_panel reset_sided_colors}
      {cursor_panel reset_silhouettes}
      {do
         ($cur_round
            {'+'
               {partymode_mgr get_rounds_played}
               1})
         ($tot_round
            {partymode_mgr get_rounds_total})
         {if_else
            {> $cur_round $tot_round}
            {round.lbl set text_token showdown}
            {round.lbl set_token_fmt crew_throwdown_rounds $cur_round $tot_round}}}
      {if
         {shell_input in_controller_mode}
         {$this controller_mode_entered}}
      {if_else
         {&&
            {speech_mgr is_speech_supportable}
            {!
               {profile_mgr get_disable_voice}}}
         {mic.grp set_showing TRUE}
         {mic.grp set_showing FALSE}}
      {voice_input_panel activate_voice_context crew_showdown_hub_screen})
   (exit
      {hamprovider remove_sink $this high_five}
      {hamprovider remove_sink $this party_pause})
   (controller_mode_entered
      {enter_controller_mode.flow activate})
   (controller_mode_exited
      {exit_controller_mode.flow activate})
   SELECT_RIGHT_LIST_TOKEN
   (poll
      SLIDE_RIGHT_LIST_ITEM
      {if_else
         {!
            [event_started]}
         {do
            {if
               [trigger_wrangle_players_timer_on]
               {-=
                  [trigger_wrangle_players_timer]
                  {taskmgr ui_delta_seconds}}
               {if
                  {<
                     [trigger_wrangle_players_timer]
                     0.0}
                  {wrangle_players.flow activate}
                  {if_else
                     [wrangle_players_first_time]
                     {do
                        {set
                           [trigger_wrangle_players_timer]
                           30.0}
                        {set
                           [wrangle_players_first_time]
                           FALSE}}
                     {set
                        [trigger_wrangle_players_timer]
                        90.0}}}}
            {if
               {<
                  [idle_vo_timer]
                  0.0}
               {play_idle.flow activate}
               {set
                  [idle_vo_timer]
                  IDLE_VO_TIME}}
            {if_else
               {&&
                  {>
                     {p_left_now_color.mat get alpha}
                     0.5}
                  {>
                     {p_right_now_color.mat get alpha}
                     0.5}}
               {hi_five.grp set_showing TRUE}
               {hi_five.grp set_showing FALSE}}
            {if
               [cycle_crew_portraits]
               {-=
                  [cycle_crew_portrait_timer]
                  {taskmgr ui_delta_seconds}}
               {if
                  {<
                     [cycle_crew_portrait_timer]
                     0.0}
                  {set
                     [cycle_crew_portrait_timer]
                     CYCLE_CREW_PORTRAIT_TIME}
                  {'++'
                     [player_left_crew_portrait_index]}
                  {if
                     {>=
                        [player_left_crew_portrait_index]
                        {partymode_mgr num_enrolled_team_1}}
                     {set
                        [player_left_crew_portrait_index]
                        0}}
                  {'++'
                     [player_right_crew_portrait_index]}
                  {if
                     {>=
                        [player_right_crew_portrait_index]
                        {partymode_mgr num_enrolled_team_2}}
                     {set
                        [player_right_crew_portrait_index]
                        0}}
                  {$this
                     update_team_photos
                     [player_left_crew_portrait_index]
                     [player_right_crew_portrait_index]}}}}
         {do
            {if
               {!
                  [event_really_started]}
               {if
                  {!
                     {start.flow is_running}}
                  {$this start_event}
                  {set
                     [event_really_started]
                     TRUE}}}}})
   (on_high_five
      {if
         {&&
            {!
               [event_started]}}
         {start.lbl
            set
            text_token
            {$this get_random_start_token}}
         {start.flow activate}
         {set
            [trigger_wrangle_players_timer_on]
            FALSE}
         {set
            [event_started]
            TRUE}
         {hamprovider set sided_colors_locked FALSE}
         {hide_right_hand_icons.flow activate}
         {ui force_letterbox_off}
         {voice_input_panel activate_voice_context ''}})
   (get_random_start_token
      {set
         $random_start_text_index
         {random_int 0 76}}
      {if_else
         {< $random_start_text_index 10}
         {set
            $random_start_text_token
            {sprint
               "dance_exclamation_0"
               $random_start_text_index}}
         {set
            $random_start_text_token
            {sprint
               "dance_exclamation_"
               $random_start_text_index}}}
      $random_start_text_token)
   (start_event
      {play_ready.flow activate}
      {start_party_mode_event})
   (NAV_SELECT_MSG
      {switch
         $name
         (back
            {exit_party_mode}
            {ui goto_screen main_screen})})
   (BUTTON_DOWN_MSG
      {switch
         $raw_button
         (kPad_Xbox_Y
            {if_else
               {shell_input in_controller_mode}
               {$this on_party_pause}
               kDataUnhandled})
         kDataUnhandled})
   (update_team_photos
      ($team1_index $team2_index)
      {print
         "party_mode_hub_panel: cycle crew portraits : team1_index="
         $team1_index
         ", team2_index="
         $team2_index
         "\n"}
      {ui
         apply_texture_clip
         p_left_now.mat
         {partymode_mgr get_player_photo_index $team1_index}}
      {ui
         apply_texture_clip
         p_right_now.mat
         {partymode_mgr
            get_player_photo_index
            {'+'
               {partymode_mgr num_enrolled_team_1}
               $team2_index}}})
   (set_participant_photos
      {do
         ($players
            {partymode_mgr get_curr_event_players})
         {if_else
            {>
               {size $players}
               0}
            {do
               {set
                  [cycle_crew_portraits]
                  FALSE}
               {ui
                  apply_texture_clip
                  p_left_now.mat
                  {partymode_mgr
                     get_player_photo_index
                     {elem $players 0}}}}
            {do
               {set
                  [cycle_crew_portraits]
                  TRUE}
               {set
                  [player_left_crew_portrait_index]
                  0}
               {set
                  [player_right_crew_portrait_index]
                  0}
               {set
                  [cycle_crew_portrait_timer]
                  CYCLE_CREW_PORTRAIT_TIME}
               {$this
                  update_team_photos
                  [player_left_crew_portrait_index]
                  [player_right_crew_portrait_index]}}}
         {if
            {>
               {size $players}
               1}
            {set
               [cycle_crew_portraits]
               FALSE}
            {ui
               apply_texture_clip
               p_right_now.mat
               {partymode_mgr
                  get_player_photo_index
                  {elem $players 1}}}}})
   (refresh_album_art
      {do
         ($pic
            {album_art find album_art.pic})
         ($song_name
            {partymode_mgr get_curr_event_song_shortname 0})
         {if_else
            {!= $song_name ''}
            {do
               ($content_name
                  {song_mgr content_name_from_sym $song_name})
               {if_else
                  {'||'
                     {==
                        $content_name
                        ""}
                     {content_mgr is_mounted $content_name}}
                  {$pic
                     set
                     tex_file
                     {song_mgr album_art_path $song_name}}
                  {$pic
                     set
                     tex_file
                     "ui/image/dc_logo_keep.png"}}}
            {$pic
               set
               tex_file
               "ui/image/dc_logo_keep.png"}}}
      {game_mode_icon_right
         set_mode
         {partymode_mgr get_curr_event_display_name}}
      {game_mode_icon_right show_small})
   (set_song
      ($song $mode)
      {partymode_mgr set_song_and_defaults $song $mode TRUE}
      {gamedata
         set
         song
         {partymode_mgr get_curr_event_song_shortname}}
      {gamemode
         set_mode
         {partymode_mgr get_curr_event_name}}
      {upnext_mode.lbl
         set
         text_token
         {partymode_mgr get_curr_event_display_name}}
      {upnext_song.lbl
         set
         text_token
         {partymode_mgr get_curr_event_song_name}}
      {artist.lbl
         set
         text_token
         {partymode_mgr get_curr_event_artist_name}}
      {$this refresh_album_art})
   (on_voice_command
      ($command)
      {$this show_mic_activity}
      {switch
         $command
         (dance
            {if
               {&&
                  {player_provider_1 get player_present}
                  {player_provider_2 get player_present}}
               {$this on_high_five}})
         (pause
            {$this on_party_pause})})
   (on_party_pause
      {if
         {!
            [event_started]}
         {party_mode_hub_screen on_party_pause}})
   (show_mic_activity
      {mic_activity.anim animate})}
{new
   HamScreen
   party_mode_hub_screen
   (panels background_panel party_mode_hub_panel meta)
   (focus party_mode_hub_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {gesture_mgr set_identification_enabled FALSE})
   (TRANSITION_COMPLETE_MSG
      {letterbox on_hide_mic})
   (on_party_pause
      {party_mode_options_screen
         set
         back_screen
         {ui current_screen}}
      {ui goto_screen party_mode_options_screen})}
{new
   HamPanel
   party_mode_standings_panel
   (file
      "party_mode_hub.milo")
   (focus right_hand.hnl)
   (allow_voice_control FALSE)
   (hide_letterbox FALSE)
   (time 3.0)
   (timer)
   (done FALSE)
   (enter_flow_started FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         [done]
         FALSE}
      {set
         [timer]
         [time]}
      {set
         [enter_flow_started]
         FALSE}
      {team_photo1.mat
         set
         diffuse_tex
         {ui get_stored_texture 0}}
      {team_photo2.mat
         set
         diffuse_tex
         {ui get_stored_texture 1}}
      {winner_left.lbl set_showing FALSE}
      {winner_right.lbl set_showing FALSE}
      {partymode_mgr update_rounds_played}
      {meter_left
         set_crew
         {partymode_mgr get_left_team_crew}}
      {meter_left
         set_meter_frame
         {partymode_mgr get_left_team_prev_pct_of_max_points}}
      {meter_left
         set_fill_amt
         {partymode_mgr get_left_team_prev_pct_of_max_points}}
      {meter_left
         set_fill_amt
         {partymode_mgr get_left_team_curr_pct_of_max_points}}
      {meter_right
         set_crew
         {partymode_mgr get_right_team_crew}}
      {meter_right
         set_meter_frame
         {partymode_mgr get_right_team_prev_pct_of_max_points}}
      {meter_right
         set_fill_amt
         {partymode_mgr get_right_team_prev_pct_of_max_points}}
      {meter_right
         set_fill_amt
         {partymode_mgr get_right_team_curr_pct_of_max_points}}
      {meter_left
         set_colors
         {partymode_mgr get_crew_color 1 1}
         {partymode_mgr get_crew_color 1 2}}
      {meter_right
         set_colors
         {partymode_mgr get_crew_color 0 1}
         {partymode_mgr get_crew_color 0 2}}
      {if_else
         {==
            {partymode_mgr get_just_won_side}
            kSkeletonLeft}
         {do
            {meter_left set_just_won TRUE}
            {meter_right set_just_won FALSE}}
         {if_else
            {==
               {partymode_mgr get_just_won_side}
               kSkeletonRight}
            {do
               {meter_left set_just_won FALSE}
               {meter_right set_just_won TRUE}}
            {do
               {meter_left set_just_won FALSE}
               {meter_right set_just_won FALSE}}}}
      {if_else
         {!
            {partymode_mgr is_showdown}}
         {do
            {set
               $team_score_diff
               {-
                  {partymode_mgr get_left_team_score}
                  {partymode_mgr get_right_team_score}}}
            {print
               "we're not in showdown! lets let people know who's winning.\n"}
            {print
               " $team_score_diff = "
               $team_score_diff
               "\n"}
            {switch
               {partymode_mgr get_just_won_side}
               (kSkeletonLeft
                  {cond
                     ({> $team_score_diff 0.75}
                        {print
                           "team left just won, and team left is winning big overall!\n"}
                        {play_left_winning_big.flow activate})
                     ({> $team_score_diff 0.25}
                        {print
                           "team left just won, and team left is winning overall!\n"}
                        {play_left_winning.flow activate})
                     ({< $team_score_diff -0.25}
                        {print
                           "team left just won, but team right is winning overall!\n"}
                        {play_left_win_losing.flow activate})
                     (TRUE
                        {print
                           "team left just won, but teams are tied overall!\n"}
                        {play_crews_tied.flow activate})})
               (kSkeletonRight
                  {cond
                     ({< $team_score_diff -0.75}
                        {print
                           "team right just won, and team right is winning big overall!\n"}
                        {play_right_winning_big.flow activate})
                     ({< $team_score_diff -0.25}
                        {print
                           "team right just won, and team right is winning overall!\n"}
                        {play_right_winning.flow activate})
                     ({> $team_score_diff 0.25}
                        {print
                           "team right just won, but team left is winning overall!\n"}
                        {play_right_win_losing.flow activate})
                     (TRUE
                        {print
                           "team right just won, but teams are tied overall!\n"}
                        {play_crews_tied.flow activate})})
               {cond
                  ({> $team_score_diff 0.25}
                     {print
                        "team just tied, and team left is winning overall!\n"}
                     {play_left_winning.flow activate})
                  ({< $team_score_diff -0.25}
                     {print
                        "teams just tied, and team right is winning overall!\n"}
                     {play_right_winning.flow activate})
                  (TRUE
                     {print
                        "team right just won, but teams are tied overall!\n"}
                     {play_crews_tied.flow activate})}}}
         {do
            {if_else
               {==
                  {partymode_mgr get_winning_side}
                  kSkeletonLeft}
               {do
                  {crew_logo.mat
                     set
                     diffuse_tex
                     {sprint
                        {partymode_mgr get_left_team_crew}
                        "_logo.tex"}}}
               {do
                  {crew_logo.mat
                     set
                     diffuse_tex
                     {sprint
                        {partymode_mgr get_right_team_crew}
                        "_logo.tex"}}}}
            {if
               {&&
                  {==
                     {partymode_mgr num_enrolled_team_1}
                     1}
                  {==
                     {partymode_mgr num_enrolled_team_2}
                     1}}
               {acc_mgr earn_accomplishment_for_all acc_1v1_throwdown FALSE}}
            {if
               {partymode_mgr left_team_max_wins}
               {if_else
                  {==
                     {player_provider_1 get side}
                     kSkeletonLeft}
                  {acc_mgr earn_accomplishment_for_player 0 acc_max_score_hit}
                  {acc_mgr earn_accomplishment_for_player 1 acc_max_score_hit}}}
            {if
               {partymode_mgr right_team_max_wins}
               {if_else
                  {==
                     {player_provider_1 get side}
                     kSkeletonRight}
                  {acc_mgr earn_accomplishment_for_player 0 acc_max_score_hit}
                  {acc_mgr earn_accomplishment_for_player 1 acc_max_score_hit}}}}}
      {enter_standings.flow activate})
   (exit)
   (poll
      {if
         {&&
            {!
               [enter_flow_started]}
            {enter_standings.flow is_running}}
         {set
            [enter_flow_started]
            TRUE}}
      {if
         {&&
            {!
               [done]}
            [enter_flow_started]
            {!
               {enter_standings.flow is_running}}}
         {set
            [done]
            TRUE}
         {if_else
            {!
               {partymode_mgr is_showdown}}
            {do
               {partymode_mgr update_curr_event}
               {if_else
                  {partymode_mgr is_showdown}
                  {ui goto_screen party_mode_showdown_intro_screen}
                  {ui goto_screen party_mode_hub_screen}}}
            {do
               {meta music_stop}
               {party_mode_standings_continue_panel set_showing TRUE}}}})}
{new
   HamPanel
   party_mode_standings_continue_panel
   PARTYMODE_CONTINUE_PANELS_COMMON
   (allow_voice_control FALSE)
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {if_else
         {$this showing}
         {switch
            $name
            (continue
               {ui goto_screen party_mode_rematch_screen})}
         kDataUnhandled})
   (on_voice_command
      ($command)
      {$this select_right_list_token $command})}
{new
   HamScreen
   party_mode_standings_screen
   (panels party_mode_standings_panel party_mode_standings_continue_panel meta)
   (focus party_mode_standings_continue_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {party_mode_hub_panel set first_time_enter FALSE}
      {party_mode_standings_continue_panel set_showing FALSE}
      {gesture_mgr set_identification_enabled FALSE}
      {hamprovider set sided_colors_locked TRUE})}
{new
   HamPanel
   party_mode_rematch_panel
   (file
      "party_mode_rematch.milo")
   (enter DX_NO_MENU_MOTIONBLUR
      {voice_input_panel activate_voice_context crew_showdown_rematch_screen})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $name
         (crew_showdown_rematch
            {acc_mgr earn_accomplishment_for_all acc_throw_down_replay FALSE}
            {partymode_mgr crew_showdown_rematch}
            {ui goto_screen party_mode_hub_screen})
         (crew_showdown_new_showdown
            {partymode_mgr reset_party}
            {exit_party_mode}
            {enter_party_mode}
            {ui goto_screen crew_throwdown_multiuser_screen})
         (crew_showdown_no_more
            {exit_party_mode}
            {ui goto_screen main_screen})})
   (on_voice_command
      ($command)
      {$this select_right_list_token $command})}
{new
   HamScreen
   party_mode_rematch_screen
   (panels background_panel party_mode_rematch_panel meta)
   (focus party_mode_rematch_panel)}
{new
   HamPanel
   party_mode_showdown_intro_panel
   (file
      "party_mode_showdown_intro.milo")
   (hide_letterbox FALSE)
   (moving_on FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         [moving_on]
         FALSE})
   (poll
      {if
         {&&
            {!
               {enter.flow is_running}}
            {!
               [moving_on]}}
         {set
            [moving_on]
            TRUE}
         {ui goto_screen party_mode_hub_screen}})}
{new
   HamScreen
   party_mode_showdown_intro_screen
   (panels party_mode_showdown_intro_panel meta)
   (focus party_mode_showdown_intro_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start})}
{new
   HamPanel
   party_mode_showdown_instructions_panel
   (file
      "party_mode_showdown_instructions.milo")
   (hide_letterbox FALSE)
   (moving_on FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {set
         [moving_on]
         FALSE})
   (poll
      {if
         {&&
            {!
               {enter.flow is_running}}
            {!
               [moving_on]}}
         {set
            [moving_on]
            TRUE}
         {ui goto_screen party_mode_hub_screen}})}
{new
   HamPanel
   partymode_showdown_instructions_continue_panel
   PARTYMODE_CONTINUE_PANELS_COMMON
   (hide_letterbox FALSE)}
{new
   HamScreen
   party_mode_showdown_instructions_screen
   (panels party_mode_showdown_instructions_panel meta)
   (focus party_mode_showdown_instructions_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start})}
{new
   HamPanel
   party_mode_seldiff_panel
   (file
      "party_mode_seldiff.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token back)
   (hide_letterbox FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {party_mode_seldiff_panel
         set_provider
         {party_mode_seldiff_panel find crew_challenge_provider.hnp}}
      {cursor_panel reset_sided_colors}
      {voice_input_panel activate_voice_context crew_showdown_seldiff_screen})
   (NAV_SELECT_MSG
      {switch
         $name
         (back
            {$this on_back})
         {do
            {partymode_mgr
               set_difficulty
               {sym_to_difficulty $name}}
            {ui goto_screen party_mode_welcome_screen}}})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {$this on_back}
         kDataUnhandled})
   (on_back
      {ui goto_screen party_mode_branch_screen})
   (set_provider
      ($provider)
      {right_hand.hnl set_provider $provider})}
{new
   HamScreen
   party_mode_seldiff_screen
   (panels meta background_panel party_mode_seldiff_panel)
   (focus party_mode_seldiff_panel)
   (back party_mode_branch_screen)
   (back_screen '')
   (on_voice_command
      ($command)
      {switch
         $command
         BACRO
         {party_mode_seldiff_panel select_right_list_token $command}})}
{new
   MultiUserGesturePanel
   party_mode_showdown_seldiff_panel
   (file
      "party_mode_showdown_seldiff.milo")
   (focus right_hand_p1.hnl)
   (s0_ready FALSE)
   (s1_ready FALSE)
   (s0_diff_selected FALSE)
   (s1_diff_selected FALSE)
   (s0_diff easy)
   (s1_diff easy)
   (s0_present FALSE)
   (s1_present FALSE)
   (use_gamertag_bg TRUE)
   (hide_letterbox FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {player_provider_1
         add_sink
         $this
         (on_player_present_change)
         0
         FALSE}
      {player_provider_2
         add_sink
         $this
         (on_player_present_change)
         0
         FALSE}
      {right_hand_p1.hnl set_provider seldiff.hnp}
      {right_hand_p2.hnl set_provider seldiff.hnp}
      {right_hand_p1.hnl enable_navigation}
      {right_hand_p2.hnl enable_navigation}
      {hamprovider set ui_nav_mode shell_multi}
      {do
         ($side
            {$this
               get_side_from_component
               {{$this loaded_dir}
                  get
                  focus_component}})
         {multiuser.ep set side $side}}
      {meta music_start}
      {set
         [s0_ready]
         FALSE}
      {set
         [s1_ready]
         FALSE}
      {set
         [s0_diff_selected]
         FALSE}
      {set
         [s1_diff_selected]
         FALSE}
      {set
         [s0_diff]
         {difficulty_to_sym
            {partymode_mgr get_difficulty}}}
      {set
         [s1_diff]
         [s0_diff]}
      {left_hand_p1.hnl set_showing FALSE}
      {left_hand_p2.hnl set_showing FALSE}
      {left_hand_p1.hnl disable_navigation}
      {left_hand_p2.hnl disable_navigation}
      {$this
         update_crew_pic
         char_p1.pic
         0
         0
         {partymode_mgr get_right_team_crew}}
      {$this
         update_crew_pic
         char_p2.pic
         1
         1
         {partymode_mgr get_left_team_crew}}
      {song.lbl
         set
         text_token
         {partymode_mgr get_curr_event_song_name}}
      {mode.lbl
         set
         text_token
         {partymode_mgr get_curr_event_display_name}}
      {voice_input_panel activate_voice_context crew_showdown_showdown_seldiff_screen})
   (exit
      {player_provider_1 remove_sink $this on_player_present_change}
      {player_provider_2 remove_sink $this on_player_present_change})
   SELECT_LIST_TOKEN
   (poll SLIDE_LIST_ITEM)
   (get_side_from_component
      ($component)
      {switch
         $component
         (right_hand_p1.hnl 0)
         (left_hand_p1.hnl 0)
         (right_hand_p2.hnl 1)
         (left_hand_p2.hnl 1)
         -1})
   (NAV_SELECT_MSG
      {do
         ($side
            {$this get_side_from_component $component})
         {switch
            $side
            (0
               {$this s0_nav_select $name})
            (1
               {$this s1_nav_select $name})}})
   (NAV_SELECT_DONE_MSG
      {do
         ($side
            {$this get_side_from_component $component})
         {switch
            $side
            (0
               {$this s0_nav_select_done $component})
            (1
               {$this s1_nav_select_done $component})}})
   (s0_nav_select
      ($name)
      {switch
         $name
         (back
            {if_else
               [s0_ready]
               {set
                  [s0_ready]
                  FALSE}
               {set
                  [s0_diff_selected]
                  FALSE}})
         {if
            {!
               [s0_diff_selected]}
            {$this set_diff 0 $name}}})
   (s0_nav_select_done
      ($component)
      {switch
         $component
         (left_hand_p1.hnl
            {if
               {&&
                  [s0_diff_selected]
                  {!
                     [s0_ready]}}
               {right_hand_p1.hnl play_enter_anim}
               {right_hand_p1.hnl set_provider startgame_db.hnp}
               {right_hand_p1.hnl refresh}
               {ready_p0.lbl set_showing FALSE}}
            {if
               {!
                  [s0_diff_selected]}
               {right_hand_p1.hnl play_enter_anim}
               {right_hand_p1.hnl set_provider seldiff.hnp}
               {right_hand_p1.hnl refresh}
               {left_hand_p1.hnl set_showing FALSE}
               {left_hand_p1.hnl disable_navigation}})
         (right_hand_p1.hnl
            {if
               {&&
                  [s0_diff_selected]
                  {!
                     [s0_ready]}}
               {set
                  [s0_ready]
                  TRUE}
               {if_else
                  [s1_ready]
                  {do
                     {enter_gameplay}}
                  {do
                     {right_hand_p1.hnl play_enter_anim}
                     {right_hand_p1.hnl set_provider readywait_db.hnp}
                     {right_hand_p1.hnl refresh}
                     {right_hand_p1.hnl disable_navigation}
                     {ready_p0.lbl set_showing TRUE}}}}
            {if
               {!
                  [s0_diff_selected]}
               {set
                  [s0_diff_selected]
                  TRUE}
               {right_hand_p1.hnl play_enter_anim}
               {right_hand_p1.hnl set_provider startgame_db.hnp}
               {right_hand_p1.hnl refresh}
               {left_hand_p1.hnl set_showing TRUE}
               {left_hand_p1.hnl enable_navigation}})})
   (s1_nav_select
      ($name)
      {switch
         $name
         (back
            {if_else
               [s1_ready]
               {set
                  [s1_ready]
                  FALSE}
               {set
                  [s1_diff_selected]
                  FALSE}})
         {if
            {!
               [s1_diff_selected]}
            {$this set_diff 1 $name}}})
   (s1_nav_select_done
      ($component)
      {switch
         $component
         (left_hand_p2.hnl
            {if
               {&&
                  [s1_diff_selected]
                  {!
                     [s1_ready]}}
               {right_hand_p2.hnl play_enter_anim}
               {right_hand_p2.hnl set_provider startgame_db.hnp}
               {right_hand_p2.hnl refresh}
               {ready_p1.lbl set_showing FALSE}}
            {if
               {!
                  [s1_diff_selected]}
               {right_hand_p2.hnl play_enter_anim}
               {right_hand_p2.hnl set_provider seldiff.hnp}
               {right_hand_p2.hnl refresh}
               {left_hand_p2.hnl set_showing FALSE}
               {left_hand_p2.hnl disable_navigation}})
         (right_hand_p2.hnl
            {if
               {&&
                  [s1_diff_selected]
                  {!
                     [s1_ready]}}
               {set
                  [s1_ready]
                  TRUE}
               {if_else
                  [s0_ready]
                  {do
                     {enter_gameplay}}
                  {do
                     {right_hand_p2.hnl play_enter_anim}
                     {right_hand_p2.hnl set_provider readywait_db.hnp}
                     {right_hand_p2.hnl refresh}
                     {right_hand_p2.hnl disable_navigation}
                     {ready_p1.lbl set_showing TRUE}}}}
            {if
               {!
                  [s1_diff_selected]}
               {set
                  [s1_diff_selected]
                  TRUE}
               {right_hand_p2.hnl play_enter_anim}
               {right_hand_p2.hnl set_provider startgame_db.hnp}
               {right_hand_p2.hnl refresh}
               {left_hand_p2.hnl set_showing TRUE}
               {left_hand_p2.hnl enable_navigation}})})
   (set_diff
      ($side $diff)
      {gamedata
         setp
         {$this get_player_index $side}
         difficulty
         {sym_to_difficulty $diff}}
      {$this set_player_difficulty $side $diff})
   (set_player_difficulty
      ($side $difficulty)
      {switch
         $side
         (0
            {set
               [s0_diff]
               $difficulty})
         (1
            {set
               [s1_diff]
               $difficulty})}
      {$this refresh_player_difficulty $side})
   (refresh_player_difficulty
      ($side)
      {switch
         $side
         (0
            {diff_p1.lbl
               set
               text_token
               [s0_diff]}
            {diff_p1.lbl set showing TRUE})
         (1
            {diff_p2.lbl
               set
               text_token
               [s1_diff]}
            {diff_p2.lbl set showing TRUE})})
   (update_crew_pic_for_side
      ($side $player_index $crew)
      {switch
         $side
         (0
            {$this update_crew_pic char_p1.pic $side $player_index $crew})
         (1
            {$this update_crew_pic char_p2.pic $side $player_index $crew})})
   (on_voice_command
      ($command)
      {do
         ($side
            {speech_mgr get_voice_direction})
         {switch
            $command
            (back
               {$this select_list_token $side 0 $command})
            {$this select_list_token $side 1 $command}}})}
{new
   HamScreen
   party_mode_showdown_seldiff_screen
   (panels meta party_mode_showdown_seldiff_panel)
   (focus party_mode_showdown_seldiff_panel)}
{new
   HamPanel
   party_mode_branch_panel
   (file
      "party_mode_branch.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token screen_name_mode_select)
   (hide_letterbox FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {voice_input_panel activate_voice_context crew_showdown_branch_screen})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $name
         (crew_showdown_start
            {partymode_mgr set_custom_party FALSE}
            {hamprovider set is_in_pre_party_mode FALSE}
            {if_else
               {!
                  {profile_mgr has_seen_tutorial kTutorialCrewShowdown}}
               {enter_tutorial tutorial_crew_showdown_screen_0 FALSE}
               {ui goto_screen party_mode_welcome_screen}})
         (partymode_events
            {ui goto_screen party_mode_choose_mode_screen})
         (crew_showdown_settings
            {party_mode_options_screen set back_screen party_mode_branch_screen}
            {ui goto_screen party_mode_options_screen})
         (screen_name_mode_select
            {exit_party_mode}
            {hamprovider set is_in_pre_party_mode FALSE}
            {ui goto_screen choose_mode_screen})
         (back
            {exit_party_mode}
            {partymode_mgr set_custom_party FALSE}
            {hamprovider set is_in_pre_party_mode FALSE}
            {ui goto_screen choose_mode_screen})})}
{new
   HamPanel
   party_mode_options_info_panel
   (file
      "party_mode_options_info.milo")
   (enter DX_NO_MENU_MOTIONBLUR
      {partymode_mgr smart_glass_listen 1})
   (exit
      {partymode_mgr smart_glass_listen 0})
   (refresh
      {print
         "party_mode_options_info_panel refresh\n"}
      {if_else
         {partymode_mgr is_using_playlist}
         {playlist.lbl
            set_token_fmt
            party_mode_options_playlist
            {partymode_mgr get_playlist_string}}
         {playlist.lbl set_token_fmt party_mode_options_playlist playlist_none}}
      {if_else
         {partymode_mgr get is_using_per_song_options}
         {skill_level.lbl set_token_fmt party_mode_options_skill_level difficulty_per_song}
         {skill_level.lbl
            set_token_fmt
            party_mode_options_skill_level
            {localize
               {sprint
                  {difficulty_to_sym
                     {partymode_mgr get_difficulty}}
                  "_title"}}}}
      {perform_icon set_mode perform}
      {battle_icon set_mode dance_battle}
      {feel_the_beat_icon set_mode rhythm_battle}
      {make_your_move_icon set_mode bustamove}
      {strike_a_pose_icon set_mode strike_a_pose}
      {if_else
         {partymode_mgr is_mode_included perform}
         {perform_icon show_small}
         {perform_icon show_small_faded}}
      {if_else
         {partymode_mgr is_mode_included dance_battle}
         {battle_icon show_small}
         {battle_icon show_small_faded}}
      {if_else
         {partymode_mgr is_mode_included rhythm_battle}
         {feel_the_beat_icon show_small}
         {feel_the_beat_icon show_small_faded}}
      {if_else
         {partymode_mgr is_mode_included bustamove}
         {make_your_move_icon show_small}
         {make_your_move_icon show_small_faded}}
      {if_else
         {partymode_mgr is_mode_included strike_a_pose}
         {strike_a_pose_icon show_small}
         {strike_a_pose_icon show_small_faded}})
   (bump_icon
      ($name)
      {switch
         $name
         (perform
            {perform_icon bump})
         (dance_battle
            {battle_icon bump})
         (rhythm_battle
            {feel_the_beat_icon bump})
         (bustamove
            {make_your_move_icon bump})
         (strike_a_pose
            {strike_a_pose_icon bump})})}
{new
   HamScreen
   party_mode_check_enable_photos_screen
   (panels meta background_confirmation_panel dialog_panel)
   (focus dialog_panel)
   (back choose_mode_screen)
   (handle_global_commands TRUE)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {if_else
         {&&
            {exists profile_mgr}
            {profile_mgr get_disable_photos}}
         {dialog_panel set_custom_ok_no crew_showdown_requires_kinect_camera camera_enable no 1 TRUE}
         {ui goto_screen party_mode_branch_screen}})
   (NAV_SELECT_MSG
      {switch
         $name
         (camera_enable
            {if
               {&&
                  {exists profile_mgr}
                  {profile_mgr get_disable_photos}}
               {profile_mgr toggle_disable_photos}}
            {ui goto_screen party_mode_branch_screen})
         (no
            {exit_party_mode}
            {ui goto_screen choose_mode_screen})})}
{new
   HamScreen
   party_mode_branch_screen
   (panels meta background_panel party_mode_branch_panel party_mode_options_info_panel)
   (focus party_mode_branch_panel)
   (back choose_mode_screen)
   (handle_global_commands TRUE)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {cursor_panel change_depth_colors_to_normal}
      {cursor_panel reset_normal_colors}
      {cursor_panel reset_silhouettes}
      {hamprovider set sided_colors_locked FALSE}
      {party_mode_options_info_panel refresh}
      {hamprovider set is_in_pre_party_mode TRUE})
   (BUTTON_DOWN_MSG
      {if
         {== $action kAction_Cancel}
         {exit_party_mode}
         {hamprovider set is_in_pre_party_mode FALSE}}
      kDataUnhandled)
   (on_voice_command
      ($command)
      {switch
         $command
         (screen_name_mode_select
            {helpbar select_left_list_item 1})
         BACRO
         {party_mode_branch_panel select_right_list_token $command}})
   (on_global_voice_command
      ($command)
      {switch
         $command
         (hidden_global_options
            {party_mode_branch_panel select_right_list_item 1})
         {on_global_voice_command $command}})
   (options_updated
      {party_mode_options_info_panel refresh})}
{new
   HamPanel
   party_mode_choose_mode_panel
   (file
      "party_mode_choose_mode.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token back)
   (hide_letterbox FALSE)
   (NAV_SELECT_MSG
      {switch
         $name
         (perform
            {gamemode set_mode perform}
            {ui goto_screen song_select_screen})
         (perform_legacy
            {gamemode set_mode perform_legacy}
            {ui goto_screen song_select_screen})
         (dance_battle_with_ffa
            {gamemode set_mode dance_battle ffa}
            {ui goto_screen song_select_screen})
         (dance_battle_with_cascade
            {gamemode set_mode dance_battle cascade}
            {ui goto_screen song_select_screen})
         (holla_back
            {gamemode set_mode holla_back}
            {ui goto_screen song_select_screen})
         (rhythm_battle
            {gamemode set_mode rhythm_battle}
            {ui goto_screen song_select_screen})
         (bustamove
            {gamemode set_mode bustamove}
            {ui goto_screen song_select_screen})
         (strike_a_pose
            {gamemode set_mode strike_a_pose}
            {ui goto_screen song_select_screen})
         (dance_battle
            {gamemode set_mode dance_battle}
            {ui goto_screen song_select_screen})
         (back
            {ui goto_screen party_mode_branch_screen})})
   (start_event
      {gamedata set song somebodytolove}
      {gamedata set venue dci}
      {gamedata setp 0 crew crew01}
      {gamedata setp 0 character emilia}
      {gamedata setp 1 crew crew04}
      {gamedata setp 1 character aubrey}
      {gamedata
         setp
         0
         difficulty
         {sym_to_difficulty easy}}
      {gamedata
         setp
         1
         difficulty
         {sym_to_difficulty easy}}
      {enter_gameplay})}
{new
   HamScreen
   party_mode_choose_mode_screen
   (panels party_mode_choose_mode_panel meta)
   (focus party_mode_choose_mode_panel)
   (back party_mode_branch_screen)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start})}
{new
   HamPanel
   party_mode_options_seldiff_panel
   (file
      "party_mode_options_seldiff.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token screen_name_save_return)
   (hide_letterbox FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {voice_input_panel activate_voice_context multiuser_seldiff_screen})
   (NAV_SELECT_MSG
      {switch
         $name
         (select_per_song
            {partymode_mgr set is_using_per_song_options TRUE}
            {party_mode_options_info_panel refresh})
         (back)
         (screen_name_save_return)
         {do
            {partymode_mgr set is_using_per_song_options FALSE}
            {partymode_mgr
               set_difficulty
               {sym_to_difficulty $name}}
            {player_provider_1 set difficulty $name}
            {player_provider_2 set difficulty $name}
            {party_mode_options_info_panel refresh}}}
      {$this on_back})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {$this on_back}
         kDataUnhandled})
   (on_back
      {ui goto_screen party_mode_options_screen})}
{new
   HamScreen
   party_mode_options_seldiff_screen
   (panels meta background_panel party_mode_options_seldiff_panel party_mode_options_info_panel)
   (focus party_mode_options_seldiff_panel)
   (back party_mode_options_screen)
   (back_screen '')
   (enter DX_NO_MENU_MOTIONBLUR
      {party_mode_options_info_panel refresh})
   (on_voice_command
      ($command)
      {switch
         $command
         BACRO
         {party_mode_options_seldiff_panel select_right_list_token $command}})
   (options_updated
      {party_mode_options_info_panel refresh})}
{new
   HamPanel
   party_mode_options_panel
   (file
      "party_mode_options.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token screen_name_save_return)
   (should_use_playlist FALSE)
   (should_use_full_length_songs FALSE)
   (should_use_per_song_options FALSE)
   (playlist_provider '')
   (refresh
      {cond
         ({hamprovider get is_in_infinite_party_mode}
            {if_else
               {partymode_mgr is_custom_party}
               {do
                  {set
                     [playlist_provider]
                     provider_customparty_no_playlist.hnp}}
               {do
                  {set
                     [playlist_provider]
                     provider_party_no_playlist.hnp}}})
         ({hamprovider get is_in_party_mode}
            {if_else
               {partymode_mgr is_custom_party}
               {do
                  {set
                     [playlist_provider]
                     provider_customshowdown_no_playlist.hnp}}
               {do
                  {set
                     [playlist_provider]
                     provider_crewshowdown_no_playlist.hnp}}})}
      {right_hand.hnl
         set
         nav_provider
         [playlist_provider]}
      {if_else
         {partymode_mgr is_using_playlist}
         {do
            {set
               [should_use_playlist]
               TRUE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_playlist
               TRUE}}
         {do
            {set
               [should_use_playlist]
               FALSE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_playlist
               FALSE}}}
      {$this check_full_length_songs}
      {if
         {hamprovider get is_in_infinite_party_mode}})
   (enter DX_NO_MENU_MOTIONBLUR
      {$this refresh}
      {voice_input_panel activate_voice_context party_mode_options_screen})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $name
         (start_the_party
            {$this finish_opting}
            {partymode_mgr set_custom_party FALSE}
            {sync_party_with_rc_panel set next_screen infinite_party_hub_screen}
            {ui goto_screen fake_party_mode_options_screen})
         (resume_party
            {$this on_back})
         (exit_party
            {quit_infinite_party_mode_to_main_menu
               {ui current_screen}})
         (resume_throwdown
            {$this on_back})
         (exit_throwdown
            {quit_party_mode_to_main_menu
               {ui current_screen}})
         (party_mode_option_difficulty
            {ui goto_screen party_mode_options_seldiff_screen})
         (party_mode_option_select_modes
            {ui goto_screen party_mode_mode_options_screen})
         (party_mode_option_use_song_shortening
            {$this toggle_use_full_length_songs}
            skip_select_anim)
         (party_mode_option_use_playlist
            {$this toggle_using_playlist})
         (back
            {$this on_back})
         (screen_name_save_return
            {$this on_back})})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {do
            {$this on_back}}
         kDataUnhandled})
   (on_back
      {$this finish_opting}
      {party_mode_options_screen go_back})
   (finish_opting
      {if
         {partymode_mgr is_using_playlist}
         {partymode_mgr shuffle_playlist TRUE}}
      {partymode_mgr
         use_full_length_songs
         [should_use_full_length_songs]}
      {partymode_mgr set_modes}
      {partymode_mgr send_party_options_to_rc})
   (toggle_using_playlist
      {if_else
         [should_use_playlist]
         {do
            {if
               {partymode_mgr is_using_playlist}
               {partymode_mgr use_selected_playlist FALSE}}
            {set
               [should_use_playlist]
               FALSE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_playlist
               FALSE}
            {party_mode_options_info_panel refresh}
            skip_select_anim}
         {do
            {set
               [should_use_playlist]
               TRUE}
            {song_select_playlist_screen set back_screen party_mode_options_screen}
            {ui goto_screen song_select_playlist_tutorial_check_screen}}})
   (toggle_use_full_length_songs
      {if_else
         {partymode_mgr is_using_full_length_songs}
         {do
            {set
               [should_use_full_length_songs]
               FALSE}
            {partymode_mgr use_full_length_songs FALSE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_song_shortening
               FALSE}}
         {do
            {set
               [should_use_full_length_songs]
               TRUE}
            {partymode_mgr use_full_length_songs TRUE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_song_shortening
               TRUE}}})
   (check_full_length_songs
      {if_else
         {partymode_mgr is_using_full_length_songs}
         {do
            {set
               [should_use_full_length_songs]
               TRUE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_song_shortening
               TRUE}}
         {do
            {set
               [should_use_full_length_songs]
               FALSE}
            {{right_hand.hnl get nav_provider}
               set_checked
               party_mode_option_use_song_shortening
               FALSE}}})}
{new
   HamScreen
   party_mode_options_screen
   (panels background_panel party_mode_options_panel party_mode_options_info_panel infinite_party_mode_timeout_panel meta)
   (focus party_mode_options_panel)
   (handle_global_commands TRUE)
   (back_screen)
   (custom_enter FALSE)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {party_mode_options_info_panel refresh}
      {infinite_party_mode_timeout_panel
         set_paused
         {'||'
            {!
               {hamprovider get is_in_infinite_party_mode}}
            {partymode_mgr is_custom_party}}})
   (go_back
      {ui
         goto_screen
         [back_screen]})
   (on_voice_command
      ($command)
      {switch
         $command
         BACRO
         {party_mode_options_panel select_right_list_token $command}})
   (on_global_voice_command
      ($command)
      {switch
         $command
         (hidden_global_main
            {cond
               ({hamprovider get is_in_party_mode}
                  {party_mode_options_panel select_right_list_token exit_throwdown})
               ({hamprovider get is_in_infinite_party_mode}
                  {party_mode_options_panel select_right_list_token exit_party})})
         {on_global_voice_command $command}})
   (options_updated
      {party_mode_options_info_panel refresh}
      {party_mode_options_panel refresh})}
{new
   HamScreen
   fake_party_mode_options_screen
   (panels background_panel party_mode_options_panel party_mode_options_info_panel infinite_party_mode_timeout_panel meta sync_party_with_rc_panel)
   (focus sync_party_with_rc_panel)}
{new
   HamPanel
   party_mode_mode_options_panel
   (file
      "party_mode_mode_toggle.milo")
   (hide_helpbar FALSE)
   (helpbar_allow_controller TRUE)
   (back_token screen_name_save_return)
   (enter DX_NO_MENU_MOTIONBLUR
      {$this check_modes}
      {voice_input_panel activate_voice_context party_mode_mode_options_screen})
   (exit
      {if
         {!
            {$this any_modes_selected}}
         {partymode_mgr toggle_included_mode perform}
         {party_mode_options_info_panel refresh}})
   SELECT_RIGHT_LIST_TOKEN
   (poll SLIDE_RIGHT_LIST_ITEM)
   (NAV_SELECT_MSG
      {switch
         $name
         (perform
            {partymode_mgr toggle_included_mode perform}
            {$this check_modes}
            skip_select_anim)
         (dance_battle
            {partymode_mgr toggle_included_mode dance_battle}
            {$this check_modes}
            skip_select_anim)
         (rhythm_battle
            {partymode_mgr toggle_included_mode rhythm_battle}
            {$this check_modes}
            skip_select_anim)
         (bustamove
            {partymode_mgr toggle_included_mode bustamove}
            {$this check_modes}
            skip_select_anim)
         (strike_a_pose
            {partymode_mgr toggle_included_mode strike_a_pose}
            {$this check_modes}
            skip_select_anim)
         (back
            {$this on_back})
         (screen_name_save_return
            {$this on_back})})
   (NAV_HIGHLIGHT_MSG
      {party_mode_options_info_panel bump_icon $name})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {$this on_back}
         kDataUnhandled})
   (on_back
      {if_else
         {$this any_modes_selected}
         {ui goto_screen party_mode_options_screen}
         {do
            {partymode_mgr toggle_included_mode perform}
            {$this check_modes}
            {ui goto_screen party_mode_options_screen}}})
   (check_modes
      {if
         {!
            {$this any_modes_selected}}
         {partymode_mgr toggle_included_mode perform}}
      {{right_hand.hnl get nav_provider}
         set_checked
         bustamove
         {partymode_mgr is_mode_included bustamove}
         FALSE}
      {{right_hand.hnl get nav_provider}
         set_checked
         strike_a_pose
         {partymode_mgr is_mode_included strike_a_pose}
         FALSE}
      {{right_hand.hnl get nav_provider}
         set_checked
         perform
         {partymode_mgr is_mode_included perform}
         FALSE}
      {{right_hand.hnl get nav_provider}
         set_checked
         dance_battle
         {partymode_mgr is_mode_included dance_battle}
         FALSE}
      {{right_hand.hnl get nav_provider}
         set_checked
         rhythm_battle
         {partymode_mgr is_mode_included rhythm_battle}}
      {party_mode_options_info_panel refresh}
      {partymode_mgr set_modes})
   (any_modes_selected
      {'||'
         {partymode_mgr is_mode_included bustamove}
         {partymode_mgr is_mode_included strike_a_pose}
         {partymode_mgr is_mode_included perform}
         {partymode_mgr is_mode_included dance_battle}
         {partymode_mgr is_mode_included rhythm_battle}})
   (options_updated
      {party_mode_options_info_panel refresh})}
{new
   HamScreen
   party_mode_mode_options_screen
   (panels background_panel party_mode_mode_options_panel party_mode_options_info_panel infinite_party_mode_timeout_panel meta)
   (focus party_mode_mode_options_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {meta music_start}
      {party_mode_options_info_panel refresh}
      {infinite_party_mode_timeout_panel
         set_paused
         {'||'
            {!
               {hamprovider get is_in_infinite_party_mode}}
            {partymode_mgr is_custom_party}}})
   (on_voice_command
      ($command)
      {switch
         $command
         BACRO
         {party_mode_mode_options_panel select_right_list_token $command}})}