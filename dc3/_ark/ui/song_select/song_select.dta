{new
   SongSelectPanel
   song_select_panel
   (file
      "song_select.milo")
   (focus right_hand.hnl)
   (skip_controller_focus_on_enter TRUE)
   (top_index 0)
   (focus_song_index 0)
   (back_token screen_name_mode_select)
   (storage_changed_error FALSE)
   (tertiary_token
      (by_difficulty by_song by_location))
   (allow_voice_control TRUE)
   (songsort_idx 0)
   (use_gamertag_bg TRUE)
   (ok_to_scroll_tertiary FALSE)
   (has_overlay FALSE)
   (first_time TRUE)
   (song_to_select_after_uncollapsing '')
   (joypad
      (hold_ms 100)
      (repeat_ms 80))
   (load
      {platform_mgr
         add_sink
         $this
         (storage_changed)}
      {ui_event_mgr
         add_sink
         $this
         (event_dialog_dismiss)})
   (enter DX_NO_MENU_MOTIONBLUR
      {$this set storage_changed_error FALSE}
      {profile_mgr clear_critical_profile}
      {profile_mgr
         add_sink
         $this
         (profile_changed_msg)
         0
         FALSE}
      {hamprovider
         add_sink
         $this
         (on_ui_nav_player_change)
         0
         FALSE}
      {player_provider_1
         add_sink
         $this
         (padnum_updated)}
      {player_provider_2
         add_sink
         $this
         (padnum_updated)}
      {hamprovider set ui_nav_mode shell}
      {if
         {'||'
            {gamemode in_mode playlist_perform}
            {gamemode in_mode init}}
         {gamemode set_mode perform}}
      {if
         {ui is_blacklight_mode}
         {activate_blacklight.flow activate}}
      {set
         [has_overlay]
         {!
            {ui has_overlay_panel}}}
      {song_offer_provider sort_with_headers TRUE}
      {song_offer_provider enter}
      {song_offer_provider
         set_sort_index
         [songsort_idx]}
      {right_hand.hnl set_provider song_offer_provider}
      {$this set ok_to_scroll_tertiary TRUE}
      {helpbar
         scroll_tertiary_to_index
         [songsort_idx]}
      {if
         [first_time]
         {set
            [first_time]
            FALSE}
         {cond
            ({gamemode in_mode perform}
               {$this set focus_song_index 2}
               {$this set top_index 2})
            ({gamemode in_mode dance_battle}
               {$this set focus_song_index 1}
               {$this set top_index 1})
            ({gamemode in_mode practice}
               {$this set focus_song_index 0}
               {$this set top_index 0})
            (TRUE
               {$this set focus_song_index 0}
               {$this set top_index 0})}}
      {right_hand.hnl
         scroll_to_index
         [focus_song_index]
         [top_index]}
      {right_hand.hnl refresh}
      {$this
         handle_highlight
         [focus_song_index]}
      {song_info_panel set_showing TRUE}
      {song_info_panel set_song_list_mode TRUE}
      {saveload_mgr autosave}
      {hamprovider set voice_commander_tip_lower FALSE}
      SONG_SELECT_GRAMMAR_ENTER_COMMON
      {voice_input_panel activate_voice_context song_select_screen}
      {song_offer_provider set_header_mode FALSE})
   (update_performit_info
      ($song)
      {minileaderboard.mld update_leaderboard $song}
      {if_else
         {$this is_valid_song $song}
         {do
            ($songid
               {song_mgr get_song_id $song})
            {perform_solo_hiscore.lbl set_best_score $songid}
            {perform_coop_hiscore.lbl set_best_coop_score $songid}}
         {do
            {perform_solo_hiscore.lbl set text_token ''}
            {perform_coop_hiscore.lbl set text_token ''}}})
   (update_p1_battle_info
      ($profile $song)
      {if_else
         $profile
         {do
            {battle_p1.grp set showing TRUE}
            {print
               "update_p1_battle_info ( "
               {$profile get_name}
               ", "
               $song
               ")\n"}
            {battle_gamertag_p1.lbl
               set_user_name
               {$profile get_pad_num}}
            {if_else
               {$this is_valid_song $song}
               {do
                  ($songid
                     {song_mgr get_song_id $song})
                  {battle_hiscore_p1.lbl set showing TRUE}
                  {battle_wins_p1.lbl set showing TRUE}
                  {battle_losses_p1.lbl set showing TRUE}
                  {battle_hiscore_p1.lbl set_best_battle_score $profile $songid}
                  {battle_wins_p1.lbl set_total_battle_wins $profile $songid}
                  {battle_losses_p1.lbl set_total_battle_losses $profile $songid}
                  {set
                     $totbat
                     {'+'
                        {$profile get_battle_won_count $songid}
                        {$profile get_battle_lost_count $songid}}}
                  {if_else
                     {> $totbat 0}
                     {do
                        {battle_last_result_title_p1.lbl set showing TRUE}
                        {if_else
                           {$profile get_won_last_battle $songid}
                           {do
                              {battle_last_won_p1.lbl set showing TRUE}
                              {battle_last_lost_p1.lbl set showing FALSE}}
                           {do
                              {battle_last_won_p1.lbl set showing FALSE}
                              {battle_last_lost_p1.lbl set showing TRUE}}}}
                     {do
                        {battle_last_won_p1.lbl set showing FALSE}
                        {battle_last_lost_p1.lbl set showing FALSE}
                        {battle_last_result_title_p1.lbl set showing FALSE}}}}
               {do
                  {battle_hiscore_p1.lbl set showing FALSE}
                  {battle_wins_p1.lbl set showing FALSE}
                  {battle_losses_p1.lbl set showing FALSE}
                  {battle_last_won_p1.lbl set showing FALSE}
                  {battle_last_lost_p1.lbl set showing FALSE}
                  {battle_last_result_title_p1.lbl set showing FALSE}}}}
         {do
            {battle_p1.grp set showing FALSE}}})
   (update_p2_battle_info
      ($profile $song)
      {if_else
         $profile
         {do
            {battle_p2.grp set showing TRUE}
            {print
               "update_p2_battle_info ( "
               {$profile get_name}
               ", "
               $song
               ")\n"}
            {battle_gamertag_p2.lbl
               set_user_name
               {$profile get_pad_num}}
            {if_else
               {$this is_valid_song $song}
               {do
                  ($songid
                     {song_mgr get_song_id $song})
                  {battle_hiscore_p2.lbl set showing TRUE}
                  {battle_wins_p2.lbl set showing TRUE}
                  {battle_losses_p2.lbl set showing TRUE}
                  {battle_hiscore_p2.lbl set_best_battle_score $profile $songid}
                  {battle_wins_p2.lbl set_total_battle_wins $profile $songid}
                  {battle_losses_p2.lbl set_total_battle_losses $profile $songid}
                  {set
                     $totbat
                     {'+'
                        {$profile get_battle_won_count $songid}
                        {$profile get_battle_lost_count $songid}}}
                  {if_else
                     {> $totbat 0}
                     {do
                        {battle_last_result_title_p2.lbl set showing TRUE}
                        {if_else
                           {$profile get_won_last_battle $songid}
                           {do
                              {battle_last_won_p2.lbl set showing TRUE}
                              {battle_last_lost_p2.lbl set showing FALSE}}
                           {do
                              {battle_last_won_p2.lbl set showing FALSE}
                              {battle_last_lost_p2.lbl set showing TRUE}}}}
                     {do
                        {battle_last_won_p2.lbl set showing FALSE}
                        {battle_last_lost_p2.lbl set showing FALSE}
                        {battle_last_result_title_p2.lbl set showing FALSE}}}}
               {do
                  {battle_hiscore_p2.lbl set showing FALSE}
                  {battle_wins_p2.lbl set showing FALSE}
                  {battle_losses_p2.lbl set showing FALSE}
                  {battle_last_won_p2.lbl set showing FALSE}
                  {battle_last_lost_p2.lbl set showing FALSE}}}}
         {do
            {battle_p2.grp set showing FALSE}}})
   (update_dance_battle_info
      ($song)
      {$this
         update_p1_battle_info
         {profile_mgr get_active_profile}
         $song}
      {$this
         update_p2_battle_info
         {profile_mgr get_non_active_profile}
         $song})
   (set_rehearse_song_info_showing
      ($state)
      {rehearse_headshot.mesh set showing $state}
      {rehearse_bpm.lbl set showing $state}
      {rehearse_bpm_title.lbl set showing $state}
      {rehearse_easy_nice.lbl set showing $state}
      {rehearse_easy_perf.lbl set showing $state}
      {rehearse_easy_pct.lbl set showing $state}
      {rehearse_med_nice.lbl set showing $state}
      {rehearse_med_perf.lbl set showing $state}
      {rehearse_med_pct.lbl set showing $state}
      {rehearse_hard_nice.lbl set showing $state}
      {rehearse_hard_perf.lbl set showing $state}
      {rehearse_hard_pct.lbl set showing $state})
   (update_rehearse_info
      ($song)
      {if_else
         {$this is_valid_song $song}
         {do
            ($songid
               {song_mgr get_song_id $song})
            {$this set_rehearse_song_info_showing TRUE}
            {set
               $portrait_tex
               {$this
                  get_char_portrait_texture
                  {song_mgr dancer_for_song $song}}}
            {if_else
               {!= $portrait_tex NULL}
               {rehearse_headshot.mat set diffuse_tex $portrait_tex}
               {rehearse_headshot.mesh set showing FALSE}}
            {rehearse_bpm.lbl
               set_int
               {song_mgr get_bpm $song}}
            {rehearse_easy_nice.lbl set_best_perform_nice $songid kDifficultyEasy}
            {rehearse_easy_perf.lbl set_best_perform_perfect $songid kDifficultyEasy}
            {rehearse_easy_pct.lbl set_best_perform_percent $songid kDifficultyEasy}
            {rehearse_med_nice.lbl set_best_perform_nice $songid kDifficultyMedium}
            {rehearse_med_perf.lbl set_best_perform_perfect $songid kDifficultyMedium}
            {rehearse_med_pct.lbl set_best_perform_percent $songid kDifficultyMedium}
            {rehearse_hard_nice.lbl set_best_perform_nice $songid kDifficultyExpert}
            {rehearse_hard_perf.lbl set_best_perform_perfect $songid kDifficultyExpert}
            {rehearse_hard_pct.lbl set_best_perform_percent $songid kDifficultyExpert}}
         {$this set_rehearse_song_info_showing FALSE}})
   (update_song_select_widget
      ($song)
      {print
         "update_song_select_widget "
         $song
         ", metamode="
         {hamprovider get metamode}
         "\n"}
      {cond
         ({==
               {hamprovider get metamode}
               dance_battle}
            {$this update_dance_battle_info $song})
         ({==
               {hamprovider get metamode}
               practice}
            {$this update_rehearse_info $song})
         (TRUE
            {$this update_performit_info $song})})
   (update_all
      {if
         {$this is_up}
         {right_hand.hnl refresh}
         {$this
            handle_highlight
            [focus_song_index]}
         {$this
            handle_highlight_settled
            [focus_song_index]}})
   (update_sort_label
      {switch
         {song_offer_provider get_sort_index}
         (0
            {set
               [tertiary_token]
               (by_difficulty by_song by_location)})
         (1
            {set
               [tertiary_token]
               (by_song by_location by_difficulty)})
         (2
            {set
               [tertiary_token]
               (by_location by_difficulty by_song)})}
      {helpbar resync})
   (do_sort
      ($current_selection)
      {helpbar
         scroll_tertiary_to_index
         {song_offer_provider get_sort_index}}
      {$this refresh_after_sort $current_selection}
      {$this update_sort_label})
   (refresh_after_sort
      ($current_selection)
      {right_hand.hnl refresh}
      {do
         ($index
            {song_offer_provider first_data_index $current_selection})
         {right_hand.hnl scroll_to_index $index $index}
         {$this highlight_right_list_item $index}
         {$this handle_highlight $index}})
   (exit
      {$this
         set
         songsort_idx
         {song_offer_provider get_sort_index}}
      {profile_mgr remove_sink $this profile_changed_msg}
      {hamprovider remove_sink $this on_ui_nav_player_change}
      {player_provider_1 remove_sink $this padnum_updated}
      {player_provider_2 remove_sink $this padnum_updated}
      {song_offer_provider exit}
      {set
         [top_index]
         {right_hand.hnl get_top_index}}
      SONG_SELECT_GRAMMAR_EXIT_COMMON
      {song_offer_provider set_header_mode FALSE}
      {song_offer_provider sort_with_headers FALSE})
   SONG_SELECT_GRAMMAR_TOGGLE_BLACKLIGHT_COMMON
   (unload
      {song_offer_provider unload}
      {ui_event_mgr remove_sink $this event_dialog_dismiss}
      {platform_mgr remove_sink $this storage_changed})
   (update_meta_performer)
   (scroll_list_to_index
      ($index)
      {right_hand.hnl scroll_to_index $index $index})
   (get_selected_song_index
      {right_hand.hnl get_selected})
   (get_selected_song_token
      {song_offer_provider
         get_token
         {right_hand.hnl get_selected}})
   (get_song_index_from_token
      ($token)
      {song_offer_provider first_data_index $token})
   HIGHLIGHT_RIGHT_LIST_ITEM
   SELECT_RIGHT_LIST_ITEM
   (poll
      SLIDE_RIGHT_LIST_ITEM
      {if
         {!=
            {ui has_overlay_panel}
            [has_overlay]}
         {if_else
            {ui has_overlay_panel}
            {do
               {set
                  [has_overlay]
                  TRUE}
               {$this set_showing FALSE}
               {song_info_panel set_showing FALSE}
               {right_hand.hnl disable_navigation}}
            {do
               {set
                  [has_overlay]
                  FALSE}
               {$this set_showing TRUE}
               {song_info_panel set_showing TRUE}
               {right_hand.hnl enable_navigation}}}})
   (handle_select_header
      ($index)
      {song_offer_provider on_select $index})
   (handle_select_item
      ($name $index)
      {song_offer_provider on_select $index}
      {if_else
         {== $name random_song}
         skip_select_anim_and_sound
         do_not_skip_select_anim_and_sound})
   (NAV_SELECT_MSG
      {print
         "----- nav_select_msg "
         $name
         " "
         $index
         "\n"}
      {switch
         $component
         (right_hand.hnl
            {$this handle_highlight_settled $index}
            {if_else
               {song_offer_provider is_data_header $index}
               {$this handle_select_header $index}
               {$this handle_select_item $name $index}})
         (left_hand.hnl
            {switch
               $name
               (screen_name_mode_select
                  {$this on_back})
               (back
                  {$this on_back})
               {if
                  [ok_to_scroll_tertiary]
                  {do
                     ($selected_index
                        {right_hand.hnl get_selected})
                     ($selected_symbol)
                     ($header_symbol)
                     ($sort_index)
                     ($selected_is_header)
                     ($old_header_count)
                     ($new_header_count)
                     ($old_header_index)
                     {if
                        {profile_mgr has_active_profile}
                        {acc_mgr
                           earn_accomplishment
                           {profile_mgr get_active_profile}
                           acc_sort}}
                     {set
                        $selected_symbol
                        {song_offer_provider get_token $selected_index}}
                     {set
                        $selected_is_header
                        {song_offer_provider is_data_header $selected_index}}
                     {set
                        $old_header_count
                        {song_offer_provider get_header_count}}
                     {set
                        $old_header_index
                        {song_offer_provider get_header_index_from_list_index $selected_index}}
                     {cond
                        ({song_offer_provider data_is $selected_index song}
                           {set $highlighted_node_type song})
                        ({song_offer_provider data_is $selected_index header}
                           {set $highlighted_node_type header})
                        ({song_offer_provider data_is $selected_index function}
                           {set $highlighted_node_type function})}
                     {song_offer_provider next_sort}
                     {helpbar scroll_tertiary 1}
                     {$this update_sort_label}
                     {$this set ok_to_scroll_tertiary FALSE}
                     {script_task
                        kTaskUISeconds
                        (delay 0.25)
                        (script
                           {song_select_panel set ok_to_scroll_tertiary TRUE})}
                     {set
                        $new_header_count
                        {song_offer_provider get_header_count}}
                     {print
                        "----- song_select tertiary select, selected index is "
                        $selected_index
                        "\n"}
                     {switch
                        $highlighted_node_type
                        (song
                           {print
                              "----- song_select tertiary select, selected index is song\n"}
                           {set
                              $header_symbol
                              {song_offer_provider get_header_symbol_from_child_symbol $selected_symbol}}
                           {set
                              $sort_index
                              {song_offer_provider data_index $header_symbol}}
                           {song_offer_provider on_select $sort_index}
                           {$this uncollapse_headers $sort_index TRUE})
                        (header
                           {print
                              "----- song_select tertiary select, selected index is header\n"}
                           {set
                              $sort_index
                              {song_offer_provider
                                 get_list_index_from_header_index
                                 {int
                                    {'*'
                                       $new_header_count
                                       {/ $old_header_index $old_header_count}}}}}
                           {if_else
                              {!
                                 {song_offer_provider get_header_mode}}
                              {do
                                 {song_offer_provider on_select $sort_index}
                                 {$this uncollapse_headers $sort_index TRUE}}
                              {$this
                                 refresh_after_sort
                                 {song_offer_provider get_token $sort_index}}})
                        (function
                           {print
                              "----- song_select tertiary select, selected index is function\n"}
                           {set
                              $sort_index
                              {song_offer_provider get_list_index_from_header_index 0}}
                           {if_else
                              {!
                                 {song_offer_provider get_header_mode}}
                              {do
                                 {song_offer_provider on_select $sort_index}
                                 {$this uncollapse_headers $sort_index TRUE}}
                              {$this
                                 refresh_after_sort
                                 {song_offer_provider get_token $sort_index}}}
                           {right_hand.hnl scroll_to_index $selected_index $selected_index})}}}})})
   (NAV_SELECT_DONE_MSG
      {switch
         $component
         (right_hand.hnl
            {if
               {song_offer_provider is_data_header $index}
               {$this uncollapse_headers $index TRUE}}
            {if
               {!=
                  [song_to_select_after_uncollapsing]
                  ''}
               {script_task
                  kTaskUISeconds
                  (delay 0.75)
                  (script
                     {if
                        {!=
                           [song_to_select_after_uncollapsing]
                           ''}
                        {$this
                           select_right_list_item
                           {song_offer_provider
                              data_index
                              [song_to_select_after_uncollapsing]}}
                        {set
                           [song_to_select_after_uncollapsing]
                           ''}})}})})
   (NAV_HIGHLIGHT_MSG
      {switch
         $component
         (right_hand.hnl
            {$this handle_highlight $index})})
   (NAV_HIGHLIGHT_SETTLED_MSG
      {unless
         {ui in_transition}
         {switch
            $component
            (right_hand.hnl
               {$this handle_highlight_settled $index})}})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {$this on_back}
         kDataUnhandled})
   (on_back
      {if_else
         {song_offer_provider get_header_mode}
         {do
            {song_offer_provider do_uncollapse}
            {right_hand.hnl refresh}
            {right_hand.hnl play_enter_anim}}
         {$this move_back_quickplay}})
   (uncollapse_headers
      ($header_index $should_play_enter_anim)
      {do
         ($header_name
            {song_offer_provider get_token $header_index})
         ($new_index)
         ($first_child_symbol)
         {set
            $first_child_symbol
            {song_offer_provider get_first_child_symbol_from_header_symbol $header_name}}
         {song_offer_provider on_select_done $header_index}
         {right_hand.hnl refresh}
         {if_else
            {==
               {song_offer_provider get_current_sort_name}
               by_artist}
            {if_else
               {!
                  {song_offer_provider get_header_mode}}
               {set
                  $new_index
                  {song_offer_provider first_artist_song_index $header_name}}
               {do
                  {set
                     $header_name
                     {song_mgr get_artist_name_from_short_name $first_child_symbol}}
                  {set
                     $new_index
                     {song_offer_provider first_data_index $header_name}}}}
            {set
               $new_index
               {song_offer_provider first_data_index $header_name}}}
         {if
            $should_play_enter_anim
            {right_hand.hnl scroll_to_index $new_index $new_index}
            {right_hand.hnl play_enter_anim}}})
   (special_select_song
      ($song_name)
      {if_else
         {&&
            {song_offer_provider get_header_mode}
            {!
               {song_offer_provider entering_header_mode}}
            {!
               {song_offer_provider exiting_header_mode}}}
         {do
            {$this set song_to_select_after_uncollapsing $song_name}
            {set
               $header_symbol
               {song_offer_provider determine_header_symbol_for_song $song_name}}
            {set
               $header_index
               {song_offer_provider first_data_index $header_symbol}}
            {$this select_right_list_item $header_index}}
         {do
            {$this
               select_right_list_item
               {song_offer_provider first_data_index $song_name}}}})
   (handle_highlight
      ($index)
      {do
         ($song
            {song_offer_provider get_token $index})
         {song_offer_provider set_highlighted_ix $index}
         {set
            [focus_song_index]
            $index}
         {$this update_song_select_widget $song}
         {if_else
            {$this is_valid_song $song}
            {do
               ($songid
                  {song_mgr get_song_id $song})
               {song_info_panel set_song $song}}
            {do
               {song_info_panel set_song ''}
               {song_info_panel hide_full_song_details}}}})
   (handle_highlight_settled
      ($index)
      {song_info_panel show_full_song_details})
   (get_focus_song
      {song_offer_provider
         get_token
         [focus_song_index]})
   (move_on_quickplay
      {unless
         {ui in_transition}
         {if_else
            {hamprovider get is_in_pre_party_mode}
            {ui
               goto_screen
               {gamemode get seldiff_screen}}
            {ui
               goto_screen
               {gamemode get ready_screen}}}})
   (move_on_quickplay_playlist
      #ifdef DEMO
      #else
      {unless
         {ui in_transition}
         {song_select_playlist_screen set back_screen song_select_screen}
         {ui goto_screen song_select_playlist_tutorial_check_screen}}
      #endif)
   (move_back_quickplay
      {unless
         {ui in_transition}
         {if_else
            {hamprovider get is_in_pre_party_mode}
            {ui goto_screen party_mode_choose_mode_screen}
            {ui
               go_back_screen
               {song_select_get_back_screen}}}})
   (storage_changed
      {if_else
         {!
            {ui_event_mgr has_active_dialog_event}}
         {ui_event_mgr trigger_event storage_changed}
         {set
            [storage_changed_error]
            TRUE}})
   (event_dialog_dismiss
      {if
         [storage_changed_error]
         {ui_event_mgr trigger_event storage_changed}
         {set
            [storage_changed_error]
            FALSE}})
   (profile_changed_msg
      {$this update_all})
   (padnum_updated
      {$this update_all})
   (on_ui_nav_player_change
      {$this update_all})
   (on_collapse_command
      {if
         {!
            {song_offer_provider get_header_mode}}
         {$this
            select_right_list_item
            {song_offer_provider
               get_header_index_from_child_list_index
               {right_hand.hnl get_selected}}}})
   (on_expand_command
      {if
         {song_offer_provider get_header_mode}
         {$this
            select_right_list_item
            {right_hand.hnl get_selected}}})
   (on_page_up_command
      {set
         $up_index
         {-
            {right_hand.hnl get_selected}
            {right_hand.hnl get_num_display}}}
      {if
         {< $up_index 0}
         {set $up_index 0}}
      {$this highlight_right_list_item $up_index})
   (on_page_down_command
      {set
         $down_index
         {'+'
            {right_hand.hnl get_selected}
            {right_hand.hnl get_num_display}}}
      {if
         {>
            $down_index
            {song_offer_provider num_data}}
         {set
            $down_index
            {-
               {song_offer_provider num_data}
               1}}}
      {$this highlight_right_list_item $down_index})
   (on_select_playlists
      {$this select_right_list_item 0})}
{func song_select_get_back_screen choose_mode_screen}
{new
   UIPanel
   lb_song_select_content_loading_panel
   (load
      {content_mgr start_refresh}
      {content_loading_panel allowed_to_show TRUE})
   (finish_load
      {content_loading_panel allowed_to_show FALSE})
   (is_loaded
      {content_mgr refresh_done})}
#define COMMON_SONG_SELECT_SCREEN
((focus song_select_panel)
   (back
      {song_select_get_back_screen})
   (background_view song_select))
{new
   HamScreen
   song_select_screen
   (panels meta background_panel song_select_panel song_info_panel)
   COMMON_SONG_SELECT_SCREEN
   (enter DX_NO_MENU_MOTIONBLUR
      {do
         ($song_preview_song
            {song_preview get_song})
         ($song_info_panel_song
            {song_info_panel get song_name})
         {if
            {&&
               $song_info_panel_song
               {!= $song_preview_song $song_info_panel_song}}
            {song_info_panel play_song_preview}}})
   (on_voice_command
      ($command)
      {switch
         $command
         (sort_artist
            {do
               ($current_song
                  {song_offer_provider
                     get_token
                     {song_select_panel get_selected_song_index}})
               {song_offer_provider set_sort_name by_artist}
               {song_select_panel do_sort $current_song}})
         (sort_difficulty
            {do
               ($current_song
                  {song_offer_provider
                     get_token
                     {song_select_panel get_selected_song_index}})
               {song_offer_provider set_sort_name by_difficulty}
               {song_select_panel do_sort $current_song}})
         (sort_song
            {do
               ($current_song
                  {song_offer_provider
                     get_token
                     {song_select_panel get_selected_song_index}})
               {song_offer_provider set_sort_name by_song}
               {song_select_panel do_sort $current_song}})
         (sort_location
            {do
               ($current_song
                  {song_offer_provider
                     get_token
                     {song_select_panel get_selected_song_index}})
               {song_offer_provider set_sort_name by_location}
               {song_select_panel do_sort $current_song}})
         (page_up
            {$this on_page_up_command})
         (page_down
            {$this on_page_down_command})
         (collapse
            {$this on_collapse_command})
         (expand
            {$this on_expand_command})
         (playlists
            {$this on_select_playlists})
         (quick_song
            {if
               {!
                  {gamemode in_mode practice}}
               {set
                  $quick_song_name
                  {song_mgr get_random_song}}
               {song_select_panel special_select_song $quick_song_name}})
         (screen_name_mode_select
            {helpbar select_left_list_item 1})
         BACRO})
   (on_say_song_name
      ($song_name)
      {acc_mgr
         earn_accomplishment
         {profile_mgr get_active_profile}
         acc_voice_control}
      {song_select_panel special_select_song $song_name})}
{new
   HamScreen
   invalid_version_screen
   (panels background_confirmation_panel dialog_panel)
   (focus dialog_panel)
   (enter DX_NO_MENU_MOTIONBLUR
      {dialog_panel set_ok invalid_version TRUE})
   (NAV_SELECT_MSG
      {ui pop_screen})}