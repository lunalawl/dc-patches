#ifndef _SHIP
{func
   setup_game_mode
   ($song $venue $player_list $mode)
   {content_mgr refresh_synchronously}
   {do
      ($i 0)
      {gamemode set_mode $mode}
      {foreach
         $player
         $player_list
         {gamedata
            setp
            $i
            difficulty
            {elem $player 0}}
         {gamedata
            setp
            $i
            autoplay
            {if_else
               {>
                  {size $player}
                  1}
               {elem $player 1}
               ''}}
         {'++' $i}}
      {if
         {!= $venue ''}
         {meta_performer set_venue_pref $venue}}
      {meta_performer set_song $song}}}
{func
   setup_game
   ($song $venue $player_list)
   {setup_game_mode $song $venue $player_list perform_legacy}}
#endif
{func
   reset_game_snapshots
   {clear_game_snapshots}
   {init_game_snapshots}}
{func
   init_game_snapshots
   {do
      ($allocate_snapshots 0)
      {set
         $allocate_snapshots
         {cond
            ({'||'
                  {hamprovider get finale}
                  {&&
                     {exists gamemode}
                     {gamemode in_mode dance_battle}}}
               1)
            ({'||'
                  {==
                     practice
                     {gamemode get gameplay_mode}}
                  {==
                     just_intro
                     {gamemode get gameplay_mode}}}
               0)
            ({'||'
                  {&&
                     {hamprovider get is_in_campaign_mode}
                     {==
                        {meta_performer get_era}
                        era_tan_battle}}
                  {&&
                     {exists gamemode}
                     {gamemode in_mode perform}
                     {!
                        {hamprovider get is_in_campaign_mode}}}}
               {gesture_mgr get_max_snapshots})
            (TRUE 1)}}
      {print
         "init_game_snapshots "
         $allocate_snapshots
         "\n"}
      {gesture_mgr init_snapshots $allocate_snapshots}}}
{func
   clear_game_snapshots
   {if
      {&&
         {exists gesture_mgr}
         {exists gamemode}}
      {gesture_mgr clear_snapshots}}}
{func
   game_restart
   {if_else
      {&&
         {ui current_screen}
         {!=
            {ui current_screen}
            game_screen}}
      {ui goto_screen restart_screen}
      {ui push_screen restart_screen}}
   {initialize_gameplay_data}
   {game_screen reset_game_mode}
   {if
      {!
         {meta_performer has_playlist}}
      {reset_game_snapshots}}
   {ui force_letterbox_off}
   {hamprovider set suppress_campaign_intro_audio FALSE}
   {hamprovider set suppress_campaign_crowd_audio FALSE}}
{func
   set_all_hud_showing
   ($show)}
{func
   reset_all_callbacks
   {func hopo_callback}
   {func swingAtHopo_callback}
   {func whammy_start_callback}
   {func whammy_end_callback}
   {func star_phrase_miss_callback}
   {func star_phrase_captured_callback}
   {func star_use_begin_callback}
   {func star_use_end_callback}
   {func hopo_hit}}
{reset_all_callbacks}
{func
   player_pan
   ($user)
   {if_else
      {game_panel multiplayer}
      {elem
         (-0.5 0.5 -0.5 0.5)
         {$user get_slot_num}}
      0}}
{func
   play_game_seq
   ($sfx)
   {synth play $sfx}}
{func
   play_game_seq_player
   ($sfx_single $sfx_multi $user)
   {do
      ($sfx
         {if_else
            {game_panel multiplayer}
            $sfx_multi
            $sfx_single})
      {synth
         play
         $sfx
         (pan
            {player_pan $user})}}}
{func
   play_sfx
   ($sfx)
   {synth play $sfx}}
{func
   run_flow
   ($flow)
   {synth run_flow $flow}}
{func
   update_meta_performer
   {ui
      foreach_current_screen
      $s
      {$s
         foreach_panel
         $p
         {if
            {$p is_up}
            {handle
               ($p update_meta_performer)}}}}}
{func
   update_song_name
   ($song_label)
   {if_else
      {&&
         {meta_performer has_playlist}
         {!
            {gamemode in_mode campaign}}
         {!
            {hamprovider get is_in_infinite_party_mode}}
         {!
            {hamprovider get is_in_party_mode}}}
      {do
         ($index
            {'+'
               {meta_performer get_playlist_index}
               1})
         ($num_songs
            {meta_performer get_num_songs_in_playlist})
         {$song_label
            set_playlist_song_name
            {gamedata get song}
            $index
            $num_songs}}
      {$song_label
         set_song_name
         {gamedata get song}}}}
{func
   frac
   ($x)
   {int
      {'*' $x 256}}}
{func
   defrac
   ($x)
   {/ $x 256.0}}
{func
   initialize_gameplay_data
   {hamprovider set finale FALSE}
   {hamprovider
      set
      golden_boomy
      {profile_mgr is_content_unlocked boomygold}}}
{func
   enter_gameplay
   {print
      "Start of enter_gameplay\n"}
   {reset_loading_music_mogg}
   {cond
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {'||'
               {==
                  perform
                  {gamemode get gameplay_mode}}
               {==
                  perform_legacy
                  {gamemode get gameplay_mode}}}
            {!
               {profile_mgr has_seen_tutorial kTutorialGeneral}}}
         {enter_tutorial tutorial_perform_it_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {'||'
               {==
                  dance_battle
                  {gamemode get gameplay_mode}}}
            {!
               {profile_mgr has_seen_tutorial kTutorialDanceBattle}}}
         {enter_tutorial tutorial_battle_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               practice
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialPractice}}}
         {enter_tutorial tutorial_practice_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               rhythm_battle
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialRhythmBattle}}}
         {enter_tutorial tutorial_rhythm_battle_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               bustamove
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialMakeYourMove}}}
         {enter_tutorial tutorial_make_your_move_screen_0 FALSE})
      ({&&
            {!=
               {ui bottom_screen}
               game_screen}
            {==
               strike_a_pose
               {gamemode get gameplay_mode}}
            {!
               {profile_mgr has_seen_tutorial kTutorialStrikeAPose}}}
         {enter_tutorial tutorial_strike_a_pose_screen_0 FALSE})
      (TRUE
         {do
            {initialize_gameplay_data}
            {if
               {exists gesture_mgr}
               {gesture_mgr set_identification_enabled FALSE}}
            {ui force_letterbox_off_immediate}
            {if_else
               {==
                  {ui bottom_screen}
                  {ui current_screen}}
               {ui goto_screen loading_screen}
               {ui pop_screen loading_screen}}
            {meta music_stop}}
         0)}}
{func
   enter_tutorial
   ($tutorial_screen $from_options)
   {if_else
      $from_options
      {tutorial_next_panel set on_complete options}
      {tutorial_next_panel set on_complete start_game}}
   {ui goto_screen $tutorial_screen}}
{func
   is_active_profile_in_fitness_mode
   {&&
      {profile_mgr get_active_profile}
      {{profile_mgr get_active_profile}
         in_fitness_mode}}}
{func
   beat_to_measure
   ($b)
   {'+'
      1
      {int
         {/ $b 4}}}}
{func
   measure_to_beat
   ($m)
   {'*'
      4
      {- $m 1}}}
{func
   get_backup_dancer_type
   {cond
      ({&&
            {exists gamemode}
            {'||'
               {gamemode in_mode dance_battle}
               {gamemode in_mode routine_builder}
               {gamemode in_mode name_that_dance}
               {gamemode in_mode cascade}
               {gamemode in_mode concentration}
               {gamemode in_mode holla_back}}}
         kBackupDancersDanceBattle)
      ({&&
            {exists gamemode}
            {gamemode in_mode campaign}}
         {get_campaign_backup_dancer_type})
      ({&&
            {exists hamprovider}
            {hamprovider get finale}}
         kBackupDancersFinale)
      (TRUE kBackupDancersRegular)}}
{func
   on_global_voice_command
   ($command)
   {if
      {letterbox has_hidden_command $command}
      {cond
         ({== $command hidden_global_main}
            {cond
               ({hamprovider get is_in_party_mode}
                  {quit_party_mode_to_main_menu
                     {ui current_screen}})
               ({hamprovider get is_in_infinite_party_mode}
                  {quit_infinite_party_mode_to_main_menu
                     {ui current_screen}})
               (TRUE
                  {if_else
                     {==
                        {ui bottom_screen}
                        {ui current_screen}}
                     {ui goto_screen main_screen}
                     {ui pop_screen meta_loading_main_screen}})})
         ({== $command hidden_global_options}
            {if_else
               {'||'
                  {hamprovider get is_in_party_mode}
                  {hamprovider get is_in_infinite_party_mode}}
               {do
                  {party_mode_options_screen
                     set
                     back_screen
                     {ui current_screen}}
                  {ui goto_screen party_mode_options_screen}}
               {do
                  {options_panel
                     set
                     back_screen
                     {ui current_screen}}
                  {ui goto_screen options_screen}}})
         ({== $command hidden_global_sign_in}
            {ui force_letterbox_off_immediate}
            {script_task
               kTaskUISeconds
               (delay 0.1)
               (script
                  {letterbox on_hide_mic})}
            {correct_identity_panel set_as_overlay})
         ({== $command hidden_global_start_the_party}
            {if
               {hamprovider get is_in_party_mode}
               {exit_party_mode}}
            {partymode_mgr set_custom_party FALSE}
            {skeleton_identifier set_up_initial_profiles}
            {enter_infinite_party_mode}
            {enter_party_screen main_screen})
         ({== $command hidden_global_cancel}
            {ui force_letterbox_off})}
      {print
         "----- on_global_voice_command "
         $command
         "\n"}}}
#define LOADINGMUSIC_ALL
(("sfx/samples/shell/loadingmusic_90s_07.mogg"
      "sfx/samples/shell/loadingmusic_90s_06.mogg"
      "sfx/samples/shell/loadingmusic_90s_05.mogg"
      "sfx/samples/shell/loadingmusic_90s_04.mogg"
      "sfx/samples/shell/loadingmusic_90s_03.mogg"
      "sfx/samples/shell/loadingmusic_90s_02.mogg"
      "sfx/samples/shell/loadingmusic_90s_01.mogg"
      "sfx/samples/shell/loadingmusic_80s_05.mogg"
      "sfx/samples/shell/loadingmusic_80s_04.mogg"
      "sfx/samples/shell/loadingmusic_80s_03.mogg"
      "sfx/samples/shell/loadingmusic_80s_02.mogg"
      "sfx/samples/shell/loadingmusic_80s_01.mogg"
      "sfx/samples/shell/loadingmusic_70s_04.mogg"
      "sfx/samples/shell/loadingmusic_70s_03.mogg"
      "sfx/samples/shell/loadingmusic_70s_02.mogg"
      "sfx/samples/shell/loadingmusic_70s_01.mogg"
      "sfx/samples/shell/loadingmusic_10s_07.mogg"
      "sfx/samples/shell/loadingmusic_10s_06.mogg"
      "sfx/samples/shell/loadingmusic_10s_05.mogg"
      "sfx/samples/shell/loadingmusic_10s_04.mogg"
      "sfx/samples/shell/loadingmusic_10s_03.mogg"
      "sfx/samples/shell/loadingmusic_10s_02.mogg"
      "sfx/samples/shell/loadingmusic_10s_01.mogg"
      "sfx/samples/shell/loadingmusic_00s_06.mogg"
      "sfx/samples/shell/loadingmusic_00s_05.mogg"
      "sfx/samples/shell/loadingmusic_00s_04.mogg"
      "sfx/samples/shell/loadingmusic_00s_03.mogg"
      "sfx/samples/shell/loadingmusic_00s_02.mogg"
      "sfx/samples/shell/loadingmusic_00s_01.mogg"))
#define LOADINGMUSIC_ERA01
(("sfx/samples/shell/loadingmusic_70s_04.mogg"
      "sfx/samples/shell/loadingmusic_70s_03.mogg"
      "sfx/samples/shell/loadingmusic_70s_02.mogg"
      "sfx/samples/shell/loadingmusic_70s_01.mogg"))
#define LOADINGMUSIC_ERA02
(("sfx/samples/shell/loadingmusic_80s_05.mogg"
      "sfx/samples/shell/loadingmusic_80s_04.mogg"
      "sfx/samples/shell/loadingmusic_80s_03.mogg"
      "sfx/samples/shell/loadingmusic_80s_02.mogg"
      "sfx/samples/shell/loadingmusic_80s_01.mogg"))
#define LOADINGMUSIC_ERA03
(("sfx/samples/shell/loadingmusic_90s_07.mogg"
      "sfx/samples/shell/loadingmusic_90s_06.mogg"
      "sfx/samples/shell/loadingmusic_90s_05.mogg"
      "sfx/samples/shell/loadingmusic_90s_04.mogg"
      "sfx/samples/shell/loadingmusic_90s_03.mogg"
      "sfx/samples/shell/loadingmusic_90s_02.mogg"
      "sfx/samples/shell/loadingmusic_90s_01.mogg"))
#define LOADINGMUSIC_ERA04
(("sfx/samples/shell/loadingmusic_00s_06.mogg"
      "sfx/samples/shell/loadingmusic_00s_05.mogg"
      "sfx/samples/shell/loadingmusic_00s_04.mogg"
      "sfx/samples/shell/loadingmusic_00s_03.mogg"
      "sfx/samples/shell/loadingmusic_00s_02.mogg"
      "sfx/samples/shell/loadingmusic_00s_01.mogg"))
#define LOADINGMUSIC_ERA05
(("sfx/samples/shell/loadingmusic_10s_07.mogg"
      "sfx/samples/shell/loadingmusic_10s_06.mogg"
      "sfx/samples/shell/loadingmusic_10s_05.mogg"
      "sfx/samples/shell/loadingmusic_10s_04.mogg"
      "sfx/samples/shell/loadingmusic_10s_03.mogg"
      "sfx/samples/shell/loadingmusic_10s_02.mogg"
      "sfx/samples/shell/loadingmusic_10s_01.mogg"))
{set
   $loading_music_mogg
   ""}
{func
   reset_loading_music_mogg
   {do
      ($era
         {hamprovider get current_campaign_era})
      {if_else
         {hamprovider get is_in_campaign_mode}
         {cond
            ({== $era era01}
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ERA01}})
            ({== $era era02}
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ERA02}})
            ({== $era era03}
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ERA03}})
            ({== $era era04}
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ERA04}})
            ({== $era era05}
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ERA05}})
            (TRUE
               {set
                  $loading_music_mogg
                  {random_elem LOADINGMUSIC_ALL}})}
         {set
            $loading_music_mogg
            {random_elem LOADINGMUSIC_ALL}}}
      {print
         "$$$$$$$$$$$$$$$$$$$$$$$loading_music_mogg set to "
         $loading_music_mogg
         "\n"}}}
{func
   is_useless_mogg_load
   ($filename)
   {do
      ($useless
         {&&
            {has_substr
               $filename
               "sfx/samples/shell/loadingmusic_"}
            {!= $loading_music_mogg $filename}})
      $useless}}
{func
   is_loading_music_mogg
   ($filename)
   {do
      ($bLoadingMusic FALSE)
      {foreach
         $f
         LOADINGMUSIC_ALL
         {if
            {== $f $filename}
            {set $bLoadingMusic TRUE}}}
      $bLoadingMusic}}
{func
   stream_recorder_stopped_recording
   {print
      "stream_recorder_stopped_recording\n"}
   {{find_obj
         {ui get_augmented_photo}
         StreamRendererColor.sr}
      set
      crew_photo_blur_iterations
      16}}