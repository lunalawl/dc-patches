{new
   UIPanel
   flashcard_dock_panel
   (file
      "flashcard_dock.milo")
   (vertical FALSE)
   (num_display 6)
   (all_flashcards
      ())
   (card_song_name_assignment
      ())
   (card_song_index_assignment
      ())
   (editor
      (vertical
         bool
         (help
            "sets display to vertical or horizontal"))
      (num_display
         int
         (help
            "sets the number of visible flashcards (editor only)"))
      (refresh
         script
         (script
            {$this refresh})))
   (enter DX_NO_MENU_MOTIONBLUR
      {print
         "enter flashcard_dock_panel\n"}
      {resize
         [all_flashcards]
         12}
      {set $cardcnt 0}
      {foreach_int
         $card_index
         0
         11
         {do
            {set
               $card
               {find_obj
                  {$this loaded_dir}
                  {sprintf
                     "flashcard_%02d"
                     $card_index}}}
            {if
               $card
               {set_elem
                  [all_flashcards]
                  $card_index
                  $card}
               {'++' $cardcnt}}}}
      {resize
         [all_flashcards]
         $cardcnt}
      {resize
         [card_song_name_assignment]
         0}
      {resize
         [card_song_index_assignment]
         0}
      {if
         {hamprovider get is_in_campaign_mode}
         {$this update_move_pct}})
   (get_card
      ($index)
      {elem
         [all_flashcards]
         $index})
   (update_move_pct
      {do
         ($move_tot
            {meta_performer
               get_required_mastery_moves
               {meta_performer get_era}})
         ($move_cap
            {meta_performer
               get_mastery_moves
               {meta_performer get_era}})
         {if
            {&&
               {!= $move_tot kDataUnhandled}
               {!= $move_cap kDataUnhandled}}
            {capture_pct.lbl set_token_fmt fraction $move_cap $move_tot}}})
   (run_flow
      ($flow_name)
      {do
         ($flow
            {find_obj
               {$this loaded_dir}
               $flow_name})
         {if
            $flow
            {print
               "Running flow: "
               $flow_name
               "\n"}
            {$flow activate}}})
   (grid_layout
      ($num_cards)
      {cond
         ({<= $num_cards 2}
            {$this
               run_flow
               "grid_layout2.flow"})
         ({<= $num_cards 4}
            {$this
               run_flow
               "grid_layout4.flow"})
         (TRUE
            {$this
               run_flow
               "grid_layout6.flow"})})
   (horz_layout
      ($num_cards)
      {print
         "horz_layout: $num_cards="
         $num_cards
         "\n"}
      {cond
         ({<= $num_cards 2}
            {$this
               run_flow
               "horz_layout2.flow"})
         ({<= $num_cards 4}
            {$this
               run_flow
               "horz_layout4.flow"})
         (TRUE
            {$this
               run_flow
               "horz_layout6.flow"})})
   (set_num_display
      ($num)
      {set
         [num_display]
         $num}
      {$this refresh})
   (refresh
      {set $card_count 0}
      {foreach
         $flashcard
         [all_flashcards]
         {if_else
            {<
               $card_count
               [num_display]}
            {do
               {$flashcard set_showing TRUE}
               {$flashcard use_small_tex FALSE}}
            {do
               {$flashcard set_showing FALSE}}}
         {'++' $card_count}}
      {$this update_move_pct})
   (set_card_move
      ($slot $ham_move)
      {{$this get_card $slot}
         set_move
         $ham_move
         TRUE})
   (set_card_campaign_status
      ($slot $is_campaign $is_mastered)
      {{$this get_card $slot}
         set_campaign
         $is_campaign
         $is_mastered
         TRUE})
   (set_card_campaign_status_2
      ($slot $status)
      {{$this get_card $slot}
         set_campaign_status
         $status})
   (highlight
      ($slot))
   (highlight_all_for_song
      ($song_index)
      {do
         ($row_map_12
            (0 0 -1 -1 -1 -1))
         ($row_map_34
            (1 1 2 2 -1 -1))
         ($row_map_56
            (0 0 1 1 2 2))
         ($row -1)
         {if
            {>
               {size
                  [card_song_index_assignment]}
               0}
            {foreach_int
               $card_index
               0
               [num_display]
               {set
                  $card_song
                  {elem
                     [card_song_index_assignment]
                     $card_index}}
               {if
                  {== $card_song $song_index}
                  {cond
                     ({<=
                           [num_display]
                           2}
                        {set
                           $row
                           {elem $row_map_12 $card_index}})
                     ({<=
                           [num_display]
                           4}
                        {set
                           $row
                           {elem $row_map_34 $card_index}})
                     (TRUE
                        {set
                           $row
                           {elem $row_map_56 $card_index}})}}}}
         {if
            {&&
               {>= $row 0}
               {!
                  {grid_layout4.flow is_running}}}
            {switch
               $row
               (0
                  {highlight_horz_01.flow activate})
               (1
                  {highlight_horz_23.flow activate})
               (2
                  {highlight_horz_45.flow activate})}}})
   (display_moves_captured
      ($latest_move)
      {print
         "flashcard_dock: display_moves_captured ("
         $latest_move
         ")\n"}
      {foreach
         $flashcard
         [all_flashcards]
         {if
            {==
               {$flashcard get_move}
               $latest_move}
            {print
               "  match on get_move\n"}
            {$flashcard set_status_change_pending}}}
      {$this set_showing TRUE}
      {$this
         run_flow
         "activate_popup.flow"})
   (unhighlight
      ($slot))
   (set_sequence_display_showing
      ($showing)
      {[all_flashcards]
         set_showing
         $showing})
   (populate_with_campaign_data
      {set
         $card_cnt
         {campaign num_campaign_moves}}
      {print
         "<<<<populate_with_campaign_data>>>> moves="
         $card_cnt
         "\n"}
      {$this set_num_display $card_cnt}
      {resize
         [card_song_name_assignment]
         $card_cnt}
      {resize
         [card_song_index_assignment]
         $card_cnt}
      {do
         ($song_cnt)
         ($song)
         ($card)
         ($card_index 0)
         ($num_song_moves)
         {set
            $song_cnt
            {meta_performer num_era_songs}}
         {foreach_int
            $song_index
            0
            $song_cnt
            {set
               $song
               {meta_performer get_era_song $song_index}}
            {set
               $num_song_moves
               {campaign num_campaign_song_moves $song}}
            {print
               "    song "
               $song_index
               " = "
               $song
               " num_song_moves = "
               $num_song_moves
               "\n"}
            {foreach_int
               $move_index
               0
               $num_song_moves
               {set
                  $card
                  {$this get_card $card_index}}
               {set
                  $ham_move
                  {campaign get_campaign_ham_move $song $move_index}}
               {set
                  $is_mastered
                  {meta_performer
                     is_dance_craze_move_mastered
                     {meta_performer get_era}
                     $song
                     $ham_move}}
               {print
                  "        move "
                  $move_index
                  " = "
                  $ham_move
                  ", mastered = "
                  $is_mastered
                  "\n"}
               {if
                  $ham_move
                  {$card set_move $ham_move TRUE}
                  {$card set is_dock TRUE}
                  {$card
                     set_campaign_status
                     {if_else $is_mastered captured encrypted}}}
               {set_elem
                  [card_song_name_assignment]
                  $card_index
                  $song}
               {set_elem
                  [card_song_index_assignment]
                  $card_index
                  $song_index}
               {'++' $card_index}}}})
   (update_flashcard_campaign_status
      {set
         $cur_era
         {meta_performer get_era}}
      {set
         $card_cnt
         {campaign num_campaign_moves}}
      {print
         "update_flashcard_campaign_status: era="
         $cur_era
         ", movecnt="
         $card_cnt
         "\n"}
      {foreach_int
         $card_index
         0
         $card_cnt
         {set
            $card
            {$this get_card $card_index}}
         {set
            $card_song_name
            {elem
               [card_song_name_assignment]
               $card_index}}
         {set
            $ham_move
            {$card get_move}}
         {$card set_campaign_status dummy}
         {print
            "    song="
            $card_song_name
            ", card="
            $card
            ", ham="
            $ham_move
            "\n"}
         {if
            $card_song_name
            {do
               {if
                  {meta_performer is_dance_craze_move $cur_era $card_song_name $ham_move}
                  {do
                     {if_else
                        {meta_performer has_song_been_attempted $card_song_name}
                        {do
                           ($mastered
                              {meta_performer is_dance_craze_move_mastered $cur_era $card_song_name $ham_move})
                           {print
                              "        song has been attempted - let's check if the move is mastered\n"}
                           {if_else
                              $mastered
                              {do
                                 {print
                                    "       is_dance_craze_move - mastered = TRUE, set it captured.\n"}
                                 {$card set_campaign_status captured}}
                              {do
                                 {print
                                    "       is_dance_craze_move - mastered = FALSE, set it encrypted.\n"}
                                 {$card set_campaign_status encrypted}}}}
                        {do
                           {print
                              "        song not attempted - keep locked\n"}
                           {$card set_campaign_status encrypted}}}}}}}})}