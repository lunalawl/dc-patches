#include performance.dta
(entered_outro FALSE)
(reset
   {overshell resolve_skeletons}
   {$hamdirector set_player_spotlights_enabled TRUE}
   {$this common_reset}
   {hamprovider set performance high}
   {if
      {&&
         $hamdirector
         {$hamdirector get cur_world}}
      {{$hamdirector get cur_world}
         set_showing
         TRUE}}
   {$hamdirector set disable_picking FALSE}
   {set
      [rhythmbattle]
      {{{$hamdirector get cur_world}
            find
            boxyman}
         find
         MicroBattle.rhb}}
   {set
      [entered_outro]
      FALSE}
   {game reset_detection}
   {$hamdirector set freestyle_enabled FALSE}
   {hamprovider set cam_player_config kHamPlayerBoth}
   {set
      [outro_done]
      FALSE}
   {audio set_loop 16 112})
(init
   {hamprovider set gameplay_mode mind_control}
   {$this common_init}
   {master
      add_sink
      $this
      (beat)}
   {hamprovider
      add_sink
      $this
      (on_game_stage_change)
      0
      FALSE})
(on_game_stage_change
   {print
      "mind_control on_game_stage_change : "
      {hamprovider get game_stage}
      "\n"}
   {switch
      {hamprovider get game_stage}
      (playing
         {set
            [rhythmbattle]
            {{$hamdirector get cur_world}
               find
               MicroBattle.rhb}}
         {[rhythmbattle]
            reset}
         {script_task
            kTaskUISeconds
            (delay 1.5)
            (script
               {do
                  {hamprovider mind_control_vo start}})})})
(in_play_range
   ($b)
   FALSE)
(can_pause TRUE)
(convert_beat
   ($b $player_index)
   {$this convert_beat_common_looped $beat $player})
(game_outro_mind_control
   {[rhythmbattle]
      end}
   {game_panel win}
   {set
      [entered_outro]
      TRUE})
(game_outro
   {if
      [entered_outro]
      {print
         "game_outro\n"}
      {$this game_outro_common}})